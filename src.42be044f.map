{"version":3,"sources":["../node_modules/hyperhtml/esm/shared/constants.js","../node_modules/hyperhtml/esm/shared/poorlyfills.js","../node_modules/hyperhtml/esm/classes/Component.js","../node_modules/hyperhtml/esm/objects/Intent.js","../node_modules/hyperhtml/esm/shared/easy-dom.js","../node_modules/hyperhtml/esm/shared/re.js","../node_modules/hyperhtml/esm/shared/features-detection.js","../node_modules/hyperhtml/esm/shared/utils.js","../node_modules/hyperhtml/esm/classes/Wire.js","../node_modules/hyperhtml/esm/objects/Path.js","../node_modules/hyperhtml/esm/objects/Style.js","../node_modules/hyperhtml/esm/shared/domdiff.js","../node_modules/hyperhtml/esm/objects/Updates.js","../node_modules/hyperhtml/esm/hyper/render.js","../node_modules/hyperhtml/esm/hyper/wire.js","../node_modules/hyperhtml/esm/index.js","../node_modules/graphql-request/dist/src/types.js","../node_modules/cross-fetch/dist/browser-polyfill.js","../node_modules/graphql-request/dist/src/index.js","../node_modules/graphql/language/visitor.js","../node_modules/graphql/language/printer.js","request.js","index.js"],"names":["G","document","defaultView","ELEMENT_NODE","ATTRIBUTE_NODE","TEXT_NODE","COMMENT_NODE","DOCUMENT_FRAGMENT_NODE","VOID_ELEMENTS","OWNER_SVG_ELEMENT","SVG_NAMESPACE","CONNECTED","DISCONNECTED","EXPANDO","SHOULD_USE_TEXT_CONTENT","UID","Math","random","Date","UIDC","Event","o_O","type","e","createEvent","initEvent","Map","keys","values","get","obj","indexOf","set","value","push","WeakMap","Object","defineProperty","configurable","WeakSet","wm","add","has","isArray","Array","toString","arr","call","trim","replace","Component","setup","content","children","create","createEntry","id","component","Class","info","w","sm","p","context","defineProperties","for","prototype","handleEvent","ct","currentTarget","getAttribute","html","lazyGetter","svg","state","defaultState","setState","render","target","source","key","fn","secret","intents","hasOwnProperty","length","define","intent","callback","invoke","object","i","node","doc","createElement","ownerDocument","fragment","createDocumentFragment","text","createTextNode","spaces","almostEverything","attrName","tagName","attrPartials","attrSeeker","RegExp","selfClosing","testFragment","hasAppend","hasContent","appendChild","hasDoomedCloneNode","cloneNode","childNodes","hasImportNode","append","apply","findAttributes","comments","$0","$1","$2","$3","replaceAttributes","createFragment","SVGFragment","HTMLFragment","clone","importNode","slice","unique","template","TL","propertyIsEnumerable","test","navigator","userAgent","parseFloat","templateObjects","join","container","innerHTML","selector","querySelectorAll","createElementNS","firstChild","Wire","first","last","insert","df","remove","parentNode","removeChild","range","createRange","setStartBefore","setEndAfter","deleteContents","createPath","path","nodeType","prepend","ownerElement","parent","unshift","name","find","IS_NON_DIMENSIONAL","original","isSVG","style","setAttributeNode","update","oldType","oldValue","newValue","cssText","toStyle","hyphen","ized","toLowerCase","css","identity","O","domdiff","currentNodes","futureNodes","getNode","beforeNode","before","currentStart","futureStart","currentEnd","currentStartNode","currentEndNode","futureEnd","futureStartNode","futureEndNode","insertBefore","nextSibling","index","el","pin","place","components","Cache","asHTML","asNode","item","constructor","canDiff","root","paths","updates","setAnyContent","setAttribute","setTextContent","parts","child","textContent","shift","nodeName","cache","attributes","array","attribute","realName","len","removeAttributeNode","script","replaceChild","invokeAtDistance","placeholder","Promise","resolve","then","String","any","isPromise_ish","fastPath","anyContent","concat","all","notObserving","observe","removeEventListener","addEventListener","removeAttribute","owner","dispatchAll","nodes","event","dispatchTarget","dispatchEvent","MutationObserver","records","record","removedNodes","addedNodes","subtree","childList","bewitched","templates","wicked","arguments","upgrade","createTemplate","SC_RE","SC_PLACE","wires","wire","weakly","statics","bind","wireContent","wireNodes","hyper","diff","HTML","query","file","after","reject","fullnameId","res","catch","error","list","loading","timeFormatter","string","date","toLocaleDateString","toLocaleTimeString","getList","newList","data","reddit","subreddit","newListings","body","querySelector","map","li","url","title","score","author","username","createdISO"],"mappings":";;;;;;AAAO,MAAMA,gBAAIC,SAASC,WAAnB;;AAEP;AACA;AACA,ACJA,kBCWwBgD;AFNjB,MAAM/C,EEcGgD,QAAAA,4BFdY,CAArB;AGLP,AHMO,ACJP,MEFMgC,AHMO/E,UGNG,EAAhB,8BHM8B,CAAvB;AENP,ACCA,AHMO,ACJP,MEFMuB,AHMOtB,OGNA,EAAb,uBHMyB,CAAlB;AGLP,AHMO,AIRP,AHIA,MEFM+E,AHMO9E,iBGNU6E,QAAQC,aHMH,CGN5B,AHMO;AEPP,AFQO,AIRA,AHIP,MDIa7E,AIRA+C,0BAAS,CAACsC,IAAD,EAAOtE,IAAP,KAAgBuE,IAAID,IAAJ,EAAUE,MJQV,EAA/B,KIR+B,CAAwBxE,IAAxB,CAA/B;ADGP,ACFO,ACFP,IFII+D,ECFSQ,ODEA,CAAb,YCFmBD,QAAQA,KAAKG,aAAL,IAAsBH,IAA1C;AFCP,AFQA,AIRO,AHIP,AINA,MDEaI,8BAAWJ,QAAQC,IAAID,IAAJ,EAAUK,sBAAV,EAAzB;AFCP,AFQO,AIRA,AHIP,IAAI7E,EDISZ,AIRA0F,MHID,MEFG,OFED9E,GGJM,CAACwE,CHIrB,GGJoB,EAAOM,IAAP,KAAgBL,EJQP,EIRWD,IAAJ,EAAUO,cAAV,CAAyBD,IAAzB,CAA7B,6DJQA;AEPP,ADIA,AINA,IJMI,EINEE,SAAS,eAAf;AHGA,ACEE,AHMF,AMdA,ALUE,AINF,MJMMhF,AINAiF,KJMJ,CAAU,OAAV,MINuB,QAAQD,MAAR,GAAiB,YAA1C;AHGA,ACEE,AHMK,ACJN,AIND,CJIA,CAEE,IDIW3F,AKVP6F,GJMEjF,GAAN,EAAW,GINI,OAAO+E,MAAP,GAAgB,IAAhB,GAAuBC,cLUP,EKVjC,eLUO;AEPP,ACEE,AHMK,AMdP,ALUE,AINF,AENA,MPgBa3F,AMdPkG,ADIAL,IJYEnF,KANN,CINc,EGHQ+H,GFDH,KLUX,UAAU7H,IAAV,EAAgB,EKVIrB,ENcD,GKV7B,GCJqB,CAArB,qBNcO;AEPP,ACEE,AFEE,AINJ,MAAMuG,IJMIjF,IAAItB,OINO,EJMEuB,WAAT,CAAqB,OAArB,CAAV,oBIN2D6E,gBAA1C,GAA6D,MAAlF;AHGA,AMVA,ALYE,AHMF,AMdA,ALUI9E,AMZJ,MNYME,SAAF,CAAYH,IAAZ,EAAkB,KAAlB,EAAyB,KAAzB;ACHW,ACEbgE,AMbF,ATmBO,AMdA,ALUH,AINJ,MLUa3E,AMdAkG,ADIPJ,GHEkBvD,CCEd,CAACqC,AFEAhE,CAAP,KEFM,CDFK,CCEIiE,AEJA,EHEiB,CAAE,CGFfkB,IFIb,EEJS,CACjBH,EFG8B,MHMP,AMdA,EDKbD,QAAV,CLSK,CMd8BM,CDKdJ,WCLhB,CDKL,GAAoC,OAApC,GAA8CJ,MAA9C,GAAuD,QADtC,EAEjB,GAFiB,CAAnB;AGRA,ALaI,AOdJ,AVoBO,ACJJ,AMNH,GNEE,GDQWxF,EGNL,EAAE2E,UAAUJ,OAAZ,CAAJ,EAA0B,cHMF,QAAQxE,SAA7B;AEPP,ACEM0E,AMTN,ACLA,AJMA,ALUC,AIHD,MKbMoF,ALaA9D,SFCShF,KAAKO,AEDA,IFCL,AEDSwE,CFCCnB,EOdE,GLaP,CFCL,AEAbgB,CFAI,SEAMD,QAAV,GAAqBE,YAArB,GAAoC,OAApC,GAA8CJ,MKdhD,ALcE,GAAuD,OADrC,EAElB,GAFkB,CAApB;AHAA,AMXe,ALaV,AMTL,ATeA,AWtBA,ALQO,ACSP,MDTaU,ELUL1F,COfgB+H,IAAT,CAAcjC,EPerB9F,QOfO,EAA0B,cFKf,aAAa,qBAAOnB,QAAP,EAAiB,UAAjB,CAAhC;AJOP,AMXE,ALaEkF,AMTJ,ACLA,AVoBO,AWtBP,MXsBatE,CQnBNqG,CHeCZ,IFFIf,KKbV,CLaE,CEEIe,CGfYY,ELaE1B,QKbpB,ALaE,IHMmB,UAAhB;AEPP,AMXE,ALaC,AMTH,ACLA,AVoBO,AMdP,ALUA,AMDA,GJbe,GHkBF1E,CQnBNuE,CHcWoB,KGdhB,GAAcS,KHcET,MGdSpB,MAAzB,iCRmBqC,mBAAhC;AEPP,AMXE,ACIF,AGVA,AZyBO,AWtBP,ALQAuB,ACSA,MPKa7F,CQnBNqI,CHauBzC,IGb5B,CFKWI,EELEG,OHaeP,ECR9B,CAAyB,CELC,ARmBP9F,CQnBJ,CAAb,SRmB6BG,KAAKC,EMdN2F,INcC,KAAgB,GMdtB,CNc0B1F,CMdP,GNcG,AMdtB,CAAzB,CNc8B,GAA6B,CAAxC,IAA6C,GAAzD;AEPP,AMXE,ALaA,AMTF,ATeO,AMdP0F,ALSO,AMAP,MPKazF,ACLAO,COdN2H,IAAL,EFKWtC,CELCG,IEFC,CAACtB,IAAD,CJOf,CELyB,AEFH8E,AJOG,CLSN,EDKC,EQnBUrF,GEFf,EAAiBsF,CFEP,CRmBI5J,EQnBU,APclBW,COdP,AEFC,AVqBK,CQnBlB,CPciB,CDKgB,CMdLkF,CIPY,CTgBd,EDKrB,OCL8BlF,CKTZ,EAAmB,ALShB,EKTH,CAAzB,ALS2C;AerB3C,AdmBO,AMXN,AKRD,AVqBE,AMTF,ACNE,AEEF,ANKO,ALSL,AMAF,MGhBMiJ,AJOO3D,ELSLrF,CCHQwB,EQbd,EAAW,CRaN,CAAeC,ADGP,EAAb,KCHK,EAAwB,gCINGwD,aAAaK,SAAb,CAAuB,IAAvB,EAA6BC,UAA7B,CAAwC7B,MAAxC,KAAmD,CAA9E;AUZP,AdmBE,ACEAI,AMTF,ACNI,ATeF,AMCK,MAAM2B,ELHL/D,ADEWzB,EEAT,AOfAgJ,CPeClF,MAAD,AFAkB,CSfVgF,CRaC,ACEAlF,AFAjB,QEAQ,AOfiByB,KPeK,AICV,IGhBJ,CAAmB,IAAnB,CAAd,GRaF,kBKIA,CAACrB,IAAD,EAAOsB,UAAP,KAAsB;AStBxB,AdmBE,AMXF,AKTA,AVsBI,AMTJ,ACNI0D,AJOJ,ALQE,AMEEhF,OAAKwB,CLJD9D,CCEC,AFAA,CSfCrB,GPeG0D,AIET,CAAY0B,CGjBZ,ERaajF,ACEA,CAAb,AOfc,CHiBd,CJFgBuD,AOfhB,AHiBkBC,ILJEtC,ACEA+B,AIEpB,EAAwB6B,ILJ1B,ACEE,EAA4BvB,GAA5B,CIEA,CJFiC;AapBrC,AdmBE,AMXFwD,AMXA,AXwBM,AMTN,ACNIvD,AJOJ,ALQI/D,AMED,CAHmB,GAIpB,CChBGqC,ADgBF0B,GLLKrC,ADEAzB,CSfC+I,AHkBP,CJHQ7F,CFAN,AMGKkC,ENHI,CObb,CAAeoC,CLaC3H,KKbhB,ALaqBgE,AIGnB,CLLoB,ACEN,CDFOnD,ACEjB,CKbkB,CNWF,AQblB,CAAsBoI,AHkBF,CLLGpH,EAAL,EAASC,AQb3B,EFE6B6F,MAAT,CNWF,EMXoB,GNWG;AclB7C,AdmBI9G,AMXF,AKVF,AVuBM,AMTN,ACNI,AEDJ,ADAA,ALQA,ALQM,AMGF,MInBEgJ,CTcCxJ,CMXCuH,ADgBElE,ELLN,ACEMD,CDFC5B,AQbAsH,ERaP,AMXS,APaAlJ,ECFE6B,ESdEgI,AJmBEvE,CQKKoK,ALvBN1G,ETeEjJ,EUhBE8J,CDCX,ACDX,CTcI,CCEqB1I,AOfA4H,ATeA5I,GMGKsD,CJHpB,CAAoBK,AOfnB,CAAP,CTegB,CAAa5D,CMG7B,EChBkB,ALaZ,AFAU,CAAP,CEAyBkD,AFAhC,GObqBoE,ALajB,CAAJ,EAAsC,EKb/B,CAAX;AQPF,AdmBI,AMXF,AMZF,AXyBQ,AMTR,ACNG,AJOH,ALQK,AMGD,KNNK,CQNHY,CFYG,ILLEvG,AKKEkC,IJHER,AIGE,CAAb,EAAgBQ,CEZDC,CPOf,CMXK2D,CDgBelE,CChBtB,ALaqBL,EKbV,CLaE,CMTY,CNSCU,AIGxB,EChBcwB,ADgBcvB,GAA5B,EJH+BX,AIGE,GJHT,CAAb,CKbb,CLauCQ,QAA1B,CAAP;AapBR,AdmBG,AMXD,AOZF,AZyBO,AMTL,ACNA,ACDF,ALQO,ALQHxD,AMGE4D,GLRJ,GSXI8F,ALQOvE,EGDL8C,ARSAnI,CObCyH,AEFAuB,AHkBE/D,EChBT,APaE,EAAS9E,EQTE,CCNC2D,ACDA,CFOd,AENA6D,CVeE,EAAgB,AMGd,CGlBemB,AHkBE1D,KGlBd,CCDO,CDCYyD,CCAV,GJkBgBhF,CGlBzB,AHkBc,CGlBrB,AHkBI,YDXuB,gBAAgB1F,QAAtC;AUZP,AdmBE,AMXD,AMbD,AX0BK,AMTH,ACND,ACAC0L,AVeI/J,AMGD,CCpBL,KCQM6H,EPOE5H,ISfQ,CViBHF,CCFC,ASbI,CTaH+B,COPb,ERSgBxB,ECFJ,EAAQyB,ADET,CAAU7B,GCFT,ADED,ECFe0B,EAAd,ADEgB,CAAxB,ICF6B,ADEAvB,KAA7B;AepBN,AdmBI,AWxBJ,AV0BG,AMTD,AGVF,ADIE2J,AVeG,AMGF,CATI,SEHGhG,CETM,CTgBJ,CSbM,EFMHsE,IPOI1G,EAAf,EOPF;AOXF,AdmBM,AMXN,AMdA,AXGe,AMeX,ACNJ,ACAEqI,AVQO,GAAP,IUZc,EAIE,ETaP,QAAL;AclBN,AdmBM,AMXN1C,AKTA,AENA,ANmBI,ACNJ,ACAE2C,AVeD,AMGD,CNbO,IOHF5H,CDgBCoD,IIvBU,CTkBL,ASbO,GHElB,CAAekC,MNWT,AMXN,EDgBuB,CChBC,GDgBG9C,MChBM8C,ADgBV,CAAW,KChBV,GAAkB,aDgBS,YAAjB,qBAAuC,KAAlD,EAAyD,IAAzD,CAAvB;ASvBA,AdmBQ,AMXN,AMfF,ALmBMC,ACNN,ACNgB,AJwBhB,KIlBK,CJkBClC,EChBE6B,MNWM5G,EMXE,CDgBC,CAACgF,CLLC7D,AOPAiC,CFYF,CChBIwD,CDgBC3B,CEZhB,CPOkB7D,AKKP,CLLE,CMXjB,ADgBwB8D,EAAT,ELLa/D,AKKAgE,EAAb,GLLkB/D,CAAL,CKM5B,ELNqC,IKM/B6D,EAAN,GAAWC,GAAGzE,OAAH,CAAWqE,MLNL,CAAX,OKMK,EAA2BM,iBAA3B,CAAX,GAA2DD,EAD7D;ASvBA,AdmBQ,AMXN,ACII,AGbN,ADOE,AVeF,AMIA,MAAMC,ECjBEyB,AGFAxH,MAAMgK,CTaCrJ,AMXA,GNWGX,EMXEwH,CNWL,CAAO7F,EAAP,AMXb,CGFuBgI,CJmBC,CAAChE,ELNEjE,AKMH,EAAKkE,EInB7B,AJmBwB,EAASC,EAAT,ILNelF,CKMCiF,CLNb,EAAgBjE,EAAhB,CKMmBkE,CLNC,IAAIhE,CKMC,GAAZ,CLNO,EAApB,CAArB,kBKM4DgE,MAAM,GAAhC,CAA1C;ASxBA,AdmBM,AMXJ,ACIE,AENF,AVeK,MObD,APaOvF,EUfL4J,GHEG1G,MAAL,AGFWyG,KHEK,CAApB,EAAuB,MGFM,GVeR,CUfN,GAAqB,IAArB,GAA4BjK,EVepBM,EUfwB2J,KVe1B,IAAa,CUfS,EAAgB,CAAhB,CAA3C,IVe2C3J,OAAT,GAAmB;AepBvD,AdmBQ,AMXJkH,AKXJ,AEPA,ANsBMI,ACRN,ACEE,AVeA,AMIF,MGrBMqB,ACEAkB,GHEGvC,APaA,KCFK5F,CQfC,CAAC+G,GReGjH,AMXf,ACIeiC,CDJC8D,CEJL,ACEM,CAAnB,CDFqBiB,CReC7G,AOPA2F,CPOL,GQfJ,ERee9F,CMX1B,CAA4B0F,CEJC,CDQ3B,CPO6BvF,CAAL,AMX1B,GNWmCR,OAAO,IAAP,CAApB,CAAX;AclBR,AdmBQ,AMXL,AKXH,ACPA,ALsBM6G,ACRJ,ACCA,AVgBEtI,AMIJ,GCnBE,GEFIkJ,ACCkBkB,EVgBhBnK,CObC,EPaL,ESjBF,ATiBW,CQTCmI,CPOCpG,AQfAmH,GReGxH,AOPZ,EPOS,AOPKiG,AEPkB,CAApC,EDDA,GRewB5F,GAAGL,COPvB,CPOoB,COPMoC,GPOG,COP7B,GPOiClC,KAAJ,EAApB,CAAP;AclBR,AdWI,AMHA,AKXJ,AJeM,ACRJ,AERF,ADSE,AVea,AMKf,MM5BM6M,AFQArE,GDDGjB,CFICtB,GPYY7H,KOZJ,AKXA,CFQC6J,EDDE,WCCWtG,AVejB,IOZO+D,EGHH,GHGD,AGHuB,CAAvC,CHG2BQ,CKX7B,ULWkB,EAAd;AQPJ,AdmBG,AMXCD,ACIA,ACRA,ACCF,AVc+B,AMM1B,GLhBL,EDSO,CUbHwC,AJoBOtE,ICjBHgC,EEJE,OAAOoB,KFIf,CAAqB,AGHAU,EDDrB,GFI0BzE,QGHQ,CAAb,CHGA,AGHvB,CHGuC,CAAhB,CAArB,KDiB0B,CAACtB,IAAD,EAAOrB,IAAP,KAC5B,CAAC,gCAAqBqB,IAArB,GACCkC,WADD,GAECC,YAFF,EAGEnC,IAHF,EAGQrB,KAAKtB,OAAL,iBAAyBsE,QAAzB,CAHR,CADK;ASxBP,AdmBE,AMXEoC,AKXJ,AEVA,ANyBMF,ACRA,ACCJ,AVcEzH,MUdEoK,ETcEpK,ADAAF,EOXEgI,CEJC,ATeP,EAAS7H,CCAC8B,IDAV,CQPe6B,ACRb,CTec,COXhB,CAAkByD,CGHCsC,CFOCvB,CPOC,CMXrB,UCIE,AEP8B8B,UAAb,CAArB;AKJF,AdmBI,AMXAvC,AKXJ,AJeM,ACRE,ACCN,AVcIvH,AMUN,MIxBMiK,ITcI1I,AMXAoG,EEJEkB,CTeC5I,ICAI,CSdCuJ,CTcAhI,CQfV,ERea,AQfC,EFIlB,ENWa,CDAX,CCAqBE,ADAChC,EUdEuD,CTcA,ADAxB,ICAW,CSdC,CTcd,ESdmC,CAArC,SVcoC;AelBtC,AdmBIhC,AMXD,AKXH,AJGE,ACIQ,AEXV,ADYE,AVcMf,AMUR,MIxBMgK,OTcOtK,CQfC+I,EReV,CAAahH,KDAK,ECAlB,ASdoB6H,ETcEjI,AQfA,ATcY,ICClC,IQfM,EAA0B,ACCA,CAAZ,CAAtB;AKJF,AdmBI,AMXF,AKXF,ACXA,AL0BE,ACRU,ACCV,AVcM1B,AMUR,MMhCMuO,AFQAjE,CFQF3G,EDLKwD,ENWEzF,GMXT,ACKS8F,CPMP,CQfY,CAACkB,CGPC,IHON,ACCUiB,EFOpB,ACRsB,EDUnBnC,QET6B4C,KFShB5C,CIjBlB,GFQsB,CAApB,MFS2BA,UAF3B,EAGE7D,OAAO6D,UAHT,EAIE;AOfJ,AdmBG,AMXF,AMtBD,ACFA,ANgCIU,ACZU,ACCZ,AVWoC,AMatC,CCjCA,ENmBE,GY7BI4G,Cb8BA,EUXG/E,GFWG/B,EK9BE,EL8BV,EAAcR,ACZAuB,OCCOkB,GFWrB,EAA0BtG,CCZCqF,GDY3B,CEXK,IDDK,ACCyBgB,CGnBvC,CJkByC,aCCaI,SAApD,EAA+D;AKJjE,AdmBEjK,AWtBF,AJmBG,ACZa,ACCZ,AVcC,AMUL,MAAM6E,EIxBEkF,CTcCnI,SKUS,GGzBG,IRenB,CACEd,CQhBuB8B,CCCC,EDDZ,ECCZ,EDD8BgG,ACCA,CTchC,EAEE,KQjBY,EAA4B,cH0B1CpF,QAAQ;AS7BV,AdqBM3B,AWxBN,ACXA,AL8BE,ACZgB,AEdlB,ADeMkI,AVMG,AMmBL,GNnBF,KMmBQnE,CLTC,AOLFiC,IAAP,GFcgBrE,KAAKqB,CG1BD,EAAEjC,CCCC2G,KJyBP,CG1BaV,CH0B3B,MIzBkC,CDDhB,CAAJ,ACCsBe,EDDE,UCCjB,CAAnB;AKJN,AdqBQ1J,AWxBR,ACXA,AL8BC,ACZmBsI,ACCf,AVcJ,AMWG,CEtCJ,ARiBO,IUNH,GJ2BM1D,GIxBD,IAAIkF,KTeS,CKSCxG,GLVZ,EQhBeZ,AH0BEkC,GG1BR,IAAa,ACEF,EDFX,CH0BG,CIxBd,EAA4B;AKLrC,AdqBQjF,AWxBR,ACXA,AJkBmB,AEfnB,ADiBMmK,AJwBgB,YLTRrI,OAAN,EAAeP,EAAf,ASfemI,ETeI,WSfS,EAAEO,UAAf,CAAjB;AKLN,AdqBU,AWxBV,ACXA,AL8BA,ACZiB,ACEZ,AVaL,AMWsB,KI1Bb,CFYH/B,GInBGtF,EFUA,GTcOlB,CWxBhB,AFUa2I,CEVGlE,AJmBA,CAAC6B,IPKM5G,AOLP,EAAOgH,CInBvB,EAA0B,GJmBV,CPKgBxI,COLD+D,EPKR,CAAa7B,ASdJ,CFShB,GETP,EFS+B,AETF,CTcf,KAAyB/B,IAAI+B,OAAJ,CAAtC;AcpBV,AdqBU,AWxBR,ACXF,ACNA,ANoCEkG,ACZa,AEhBf,ADmBMqC,AVYC,AMWe,MNXT/J,CQHN+H,CInBCmG,MJmBN,CPKe5O,AOLFoI,EInBEsG,EXwBI,COLDxO,GPKH,CSdO6J,CTcGjI,EWxBA9B,AJmBZ,CAAakB,CPKX,CWxBA,CXwBgBS,AWxBF,CJmBhB,CAAkB6G,CRGV,CYtBN,CAAf,AFUkC,CTcG,CSdD4B,EFSE/E,CPKP,GAAa,GDFrB3E,EUZD,CFST,AETT,EFS8CqD,CPKnB,CDFV,ECEmCpC,AOL3C,CAAb,CPKe,ADFmB,CCE1B,QDFmCjB,OAAT,GAAmB;AelBvD,AdqBS,AWxBP,ACXF,ACNA,ANoCC,ACZY,ACGR,AVYH,AMWoB,CEhBtB,IETS,CERHkO,EZsBEjO,GUXC,EVWI,EUXA+J,CEXGkE,CZsBCtO,MYtBMiG,CZsBV,EAAX,KYtBc,CFWc,IEXM,AFW3B,EAA2B,iBEXOA,QAAP,CAAlC,EAAoD;AGItD,AdeW,AWlBP0C,ACXJ,ACNA,ALwBW,ACILyB,AVWJ,AMWoB,SNXb,EYtBElF,AHHD,KGGN,CAAaoJ,AHOA,KCIK7E,EEXE2B,OAApB,EAA6BmD,CFWC,EAAErE,MEXhC,GFWkB,CAAhB;AKPN,AdaI,AWhBD,ACXH,ACNA,ALwBY,ACIP,AVWD5J,AMWkB,GLnBpB,AWhBA,EFWO,GVaDX,CYtBC,EFYA,AVUL,EAAS,EUVAqK,CDLGxB,EDYD,GCZH,EAAWC,MAAM3I,KAAN,CCKUqK,EDLI,EAAd,CAAX,KACK1B,KCIR,CDJcM,CCI2B,MDJjC,GAAgB,EAAhB;AMJjB,AdsBE9I,AWzBEuO,ACXJ,ACNA,ANoCErN,ACXS,AEnBX,ADuBM6I,AVSS3J,AMYO,MQlDhB2O,Gb0CGnN,ADJShC,CQFR,CAACV,CInBC+F,AZqBG,CctCFtD,AdsCSjC,EQFZ,CREK,CYrBX,AJmBa8D,CInBC,AZqBS,GQFjB,CInBN,AZqBW,CQFQ2E,CInBCmG,AEjBA,Cb0CtB,ASbuB/E,CTcrBzI,COPM,MInBN,AJmB6B,EAAC5B,CPOpB4C,ESdwB,CFOL,CEPO8H,CI7BTmF,ANoCS5G,IPMtC,Aa1CsB,ANoCS,CMpCGxG,Cb4ChC,AOR0C6B,IAAb,CEPR,CI7BD,ANoC4BqE,AEP9C,CI7BN,EAZA,GNgD0DD,WAAWpE,IAAX,CAAzB,EAAvB,CADK;AOdf,AdwBMzB,AW3BH,ACXH,AL8BEqG,ACXQ,AEnBV,ADuBM8B,AVQ6B,AMab,IARlB,CNNK,Ca9BH0E,EL8BE,CAACpL,IK9BI,AL8BL,CK9BM9D,CL8BCmI,CCXCtG,CRmBG,AYtCN,EZsCO1B,AYtCDX,AL8BX,IK9BK,AJmBUqJ,CDWC,AEPAiB,CTeErK,CAAN,EAAS,AYtCDO,GJmBG,EAAR,EInBY,CJmBC8I,ACIA,EAAEqB,CGvBV,EJmBlB,CIlBR7I,OHsBsB,CGtBd9B,AHsBJ,QGtBY,MAAhB,CAD0B,GAE1B2P,OAAOnP,GAAP,EAAYR,QAAQ,MAApB,CAFF;AEeA,AdwBQ,AW3BN,AElBF,ANqCI,ACXM,AEnBV,ADuBK,AVQDoB,AMaA,KIxBK,CI3BH4C,EdsCExD,AMaEuD,CMjCD,CJmBCA,CEND,AVOL,EYpBF,AZoBW,CCOCjB,Ca7CC,AL0BA,ACKFgI,EJoBMlF,ELNA3F,AORA0I,EPQE5F,AQnBAW,GDWGK,ACXd,IAAkB4F,AHyBE5F,EEd1B,EMrCkBC,CJ+BSiH,CTcvB,AKMJ,EGzBM,EK1BV,AL0BsC,QCK7B,EAAqC;AKT9C,AdwBQ,AW3BP,ACTD,AL4BI,ACXQ,AEnBZ,ADwBMH,AVMS,AMcX,OAAK,EEdA,EFcIzG,ELLF,AOTEA,ARASnD,EMcL,CNdQX,AMcrB,CEda,CAAb,ACXcI,AHyBE0D,CNdE,CQAFA,ARAS7D,EMcLuD,CIpBDsG,AVMD,CQAEtG,ECXE4F,EHyBtB,CNdkC,CQAlC,AFc4BtF,CLLHvB,COTGuB,CPSrB,ADTI,AMcX,EEdA,ACX+BX,AHyBE,CIpBD,CTeDZ,AOTE,CCXX,ACKY8H,CDL1B,CRoB0B5H,QSff,CAAjB,GTe6B,CAAgB,WAAhB,CAAzB,IACC,OAAO/C,EAAED,IAFZ,EAGEC,CAHF;AcvBR,Ad2BO,AYvCP,ACTA+P,ANqCM1L,ACXMjC,AEnBZ,ADwBM4I,AVKuC,AMevCvE,MQnDA9E,AHOA4J,CVmCa,EADf,CKUQ/F,GEdCnB,EMrCb,EL0BiBZ,CDWCkC,CG9BC,CFmBP,CHyBN,CIpBgB0E,AJoBE3E,EGzBA,IDWX,CAAgBgD,ECXEhI,CHyBGiF,EEdAvB,AENA,CFML,CAAhB,ACXW,ACKY0G,CFM9B,ICXmC,EHyBI1G,CAAX,CK5ClC,ADwBsB,AJoBE,CIpBlB,AJoBA,GGzBkB,IACA,CAAC8E,mBAAmBlC,IAAnB,CAAwBvD,GAAxB,CADD,GAEG/C,QAAQ,IAFX,GAEmBA,KAF/B;AMJZ,Ad2BMsC,AW9BN,ACTA,ACTA+M,ANqCK,ACTM,ACGN,AVEI,AMkBJ,GNlBH,EULO,CI5BHH,IbgDM3M,AahDZ,CJgCS,EIhCI2M,EJgCAhF,EIhCb,IbgDuB,MAAX,EAAmB/I,MShBEmJ,CTgBrB,CARR,WSRK,EAAuC;AKVhD,Ad2BM9H,AW9BN,ACTA,ACTA6M,ANqCI,ACTMvG,AErBV,ADyBMtB,AVIL,AMeG,CNrBG,Kc9BDnE,GbgDKd,AKGAwD,EEdApC,CMrCX,ERmDI,CQnDWN,ANqCX,EELakH,GTgBK,AQpBF,CK5BpB,IbgDW,EAAkBpJ,CQpBnB,CCIJ,CACEvB,ITeG,ASfCsK,CTMR,eSNI,EAAsB,CAAtB,CADF,EAEEtK,IAAIuK,cAAJ,EAAoB,CAAC,CAArB,EAAwBK,WAF1B;ATiBA/H,AW9BN,ACTA,ACTA4M,ANqCG,ACTO,AErBV,AD4BMnF,AJgBH,CAjBe,KQlCZoF,IAAN,CbgDa/M,GQpBCmG,KAAJ,EAAWC,CRoBG,GSbCe,EDPE1J,ERoBd,EAAoB,CQpBZ,GAAckJ,GCOG,EAAEa,GTaK,AQpBDhB,SCOnB,CAAnB,CDPiDrH,IAApB,CAAd,CAAX,KACKqH,WAAWC,QAAX;AO/Cf,AfkE+C,AW7B/C,ACTA,ACTAqG,AN4Be,ACCL,AEtBV,AD4BM/E,AVCN,AMeE,MQnDI+E,GHOGvE,EGPT,Eb+CsD,Ca/CxCuE,AHOd,GAAiB,CVwC0C3M,AUxCxC,CGPnB,GJmCsBiH,QTYyB,ISZb,EAAES,SAAd,CAAhB;AMrDN,AfiE0E,AW5B1E,ACTA,ACTAiF,AL6BS,AEtBTvE,AD4BK,AVCE,AMeL,KLLW,ASlBJ,CTQL,AY3BE3J,ACTA4N,AHOA9M,AX6BOvB,GYlBJgO,CElBT,CJoCS,IC7BT,AD6BavE,CElBb,ACTgB9K,CDSC8G,CDXChG,MEEM,CDSxB,ADXyBkB,ECWE,IDXT,CAAc,CD6BDgJ,CVAR1J,EW7BL,CAAlB,GX6B6BD,OAAN,CUAd,EAAuC,CVAR,CAACE,YACvCC,OAAOD,SAASE,IAAT,CAAcD,GAAd,MAAuB,gBADQ,EAEtC,GAAGD,QAFmC,CAAjC;AgBtDP,AfiEM8B,AW5BJyD,ACTA,AJoBI,ACOAqB,AJeJ,MO1CIuH,IAAJ,EAAUnI,CDSC,IFkBI2D,CTUG,EAAC3K,CYrCnB,EAAqBuB,GZqCI,GSVrB,CG3BJ,AH4BMvB,EEnBYuG,ACTYA,EH4BpBgE,MEnBC,ACTX,CDSA,CCTwCmB,MH4BlC,CG5BN,CH4B0B,CAApB,CADF,EAEE1L,IAAIsK,gBAAJ,EAAsB,CAAtB,CAFF;AMtDN,AfgE6B,AW3B3B,ACTA,ACTF,AL6BQ,AEtBR,ADgCMC,AVDC,AMaL,MNbWpJ,EYpBLW,CCTC,GJoBGqH,GRgBwB,AW3BpBwF,EX2Ba,EYpCVU,IH8BIvF,CDVCV,CGXEpJ,CCTjB,EDSO,ACTY,Ab6BR,CYpBUuG,GHWtB,EAA0B,ECUE,CErBpB,CFqBsB8D,IEpBtB0E,CZmBQ5N,IAAJ,CUCG,CAAjB,EVD0B,MYnBDD,IAAf,CAAoB,CZmBQ,GYnB5B,EAA0BqF,QAA1B,CADd;AIpCF,Af+DyC,AWzBvC,ACVE8I,ACTJ,AL6BUnG,AEtBV,ADgCMuB,AVDJ,AMaA,MK5CIU,CVqCc,CWzBZhH,CXcJ,ADKK,Ka7BK,Ab6BA/C,CW/BCsB,ICYI,CHUC,CTSX,CAAa,EW/BE,ADgCAqH,EChCCrH,EFsBf,EEtBc,EAAT,CEEM2M,AFFrB,CX+BS,EUC2B,AVDA,EUCEjF,AVD7B,CAAP,Ca7BY,CAAV,CDU0B,KAAKlG,EFoBX,CAAlB,UEpBa,EAA+BpC,KAAKqC,QAApC,CAAjB;AIrCF,Af+DMpB,AWzBJ,ACVE,ACTJ,AL6BUoG,ACUL,AVDJ,AMaC,CNfK,IUJE,GEbDuC,ACVApK,GH+BC,GTIO,EAAClB,AYnCDmG,EDUE,GHUG6C,CReEvG,KAAN,EAAaG,AYnCDqM,AJoBnB,MReO,CWzBS5N,ACVtB,CZmCkC,KWzBpB,CAAe0C,QAAf,EAAyBrC,KAAK2J,KAA9B,CAAhB;AIrCF,Af+DQ,AWzBNiD,ACVE,AJoBM,AEtBV,ADiCM,AJWJ,QO1CMpN,EH+BEuJ,EErBE1K,CCVR,CZmCU8C,AQfA6F,CGVZ,ACVa,CDUC,EFqBEgB,CDXR,CGVR,CHUmBf,CGVC,CXyBC,CWzBAxC,GHUInG,CReCyC,GSJG3C,CErBT,AHUD,CReb,CWzByBwL,CHUEtC,GCWjB,CAAqBqB,EErBjB,EAApB,IHU6C,EAA1B,CAAX,ICWQ,CDVH1B,ACUT,MDVeM,OAAN,GAAgBD,YAAY,EAA5B;AOhDf,Af+DQ,AWzBNH,ACVI1C,ACTN,AL8BS,AEvBT,ADiCM,AJWJxC,MK5CIqH,EL4CIrH,CMhCDyB,CFqBCqF,GJWKzF,CLPDlC,AWzBZ,CAAawI,ADZA,CAACL,CEECgE,CH+BC,CAAZ,CCjCS,CDiCM,CErBnB,ADZoBvL,AL4CZ,CLPa,AUrCR,AL4CU,CMhCD+K,ACVlB,GP0CI,CK5CkB,ALmB5B,ELkB8BhM,GWzB5B,EXyBqB,KAAiB,UAAjB,GAA8BA,MAAM3B,IAAN,CAAW,IAAX,EAAiB+B,MAAjB,CAA9B,GAAyDJ,KAAxE;Ae9DR,Af+DQ,AWzBN,ACVItB,ACTN,AL8BQ,AEvBN,ADiCMqG,OErBDoE,EDZE,IVqCI,GYnCG,EDUd,CXyBiB7I,ASJAwH,EErBE,CXyBb,CWzBN,GXyBwBzH,CUrCCmI,IAAlB,ADiCD,CTIA,ASHErL,ETGwBiD,AUpC9BoI,EDiCUZ,EClCL,CEEgBrM,EZmCgB+E,AUnCpCkI,GVmC6B,EUnCxBC,CEAM,CZmCgCpI,AYnC1C,GHgCI,EAAqB,CAArB,CTG6CC,ASJ/C,EC/BH,ADiCKnD,CTEsC,CAAd,ESFpBsK,gBAAJ,EAAsB,CAAtB,CAFF;AM1DR,Af+DQ,AWzBN,ACVItD,AJhBF,AEgBE,ADkCEyD,AJQR,OMhCOvF,CEnBC7D,Ib4CI2B,MWzBV,ACVgBvD,CDUC0E,IXyBI,GSDG4F,CExBxB,ACVyB,CZmCnB,EAAsB,EYnCZ,GZmCiB/G,AYlC3B5E,GHiC8B,EAAEgM,CTCV,GYlCbhD,OHiCS,CAAlB,OGjCA,2BAAwC,KAAxC,CADU,GAEV7F,OAFF;AG3BN,Af+DQ,AWzBP,ACRKmK,AJmBH,AErBG,ADkCC,AJQA,GG5DL,GH4DWtF,CIdP,CItCakJ,KJ6CR,ETAI,Aa7CIA,CDYH,GZiCR,cYjCeA,IAAP,CAAYtI,EPwCF,OOxCV,CAAV,2BPyCJ,CAAChD,GAAD,EAAMD,IAAN,KAAeC,IAAIoC,UAAJ,CAAerC,IAAf,EAAqB,IAArB,CADS,GAExB,CAACC,GAAD,EAAMD,IAAN,KAAeqB,UAAUrB,IAAV,CAFV;AUrEP,Af+DO,AYjCF,AJmBJ,AErBK,ADmCE,CDxDR,MRkDgB,CaxCSN,IJ8CbqH,KI9CarH,AJ8CRqG,aAAae,KAAb,CAAT;AM9DR,Af4CI,AWNJ,ACRIa,AFFE,ADmCE5B,AJSR,GL9BE,Ka1B+B4F,IDcrBlK,KAAR,CAAc,GHiCGqF,CGjCjB,EAAoBgE,EHiChB,IAAsB,GGjC1B,CHiCI;AM9DR,AfgEC,AW1BD,ACRI,AJmBJ,AErBQ,ADmCAjH,AJSR,MGvBM2B,AErBMzF,CAAL,CEECxC,ACf+BmO,CFuB9BxG,CDVQ,CAAV,EEEH,CFDKnF,CCST,ACRe,AJmBA,CKlCwB2L,EFuBrB,ADTLpE,CDkCMV,IClCDhD,MAAL,EAAJ,ADkCD,CACE3H,EDfV,AEpB6BqL,EDmCfP,EAAJ,CCnCwBtD,CDmChB,CAAR,CADF,CCnCD,CDqCGxH,ECnCD8D,EDmCKwG,ECnCDe,KAAK5D,MAAL,EAAJ,CDmCC,ECnCmB4D,ADmCG,CAAtB,CAFF,GCjC0B9D,KAP7B,GAQC6D,OAAOC,KAAKrI,MAAL,EAAP,EAAsBc,CAAtB,CAVJ;AKpBF,AJsCE,ACRI,AJmBN,AElBC,ADmCO2G,AJMD,CKrDP,KF8BMjB,AHuBOnD,EMlCL7C,AExBsC2L,EDgBpC1P,GJmBG,CAACkG,EAAD,CGXIkJ,CHWCjJ,CInBC,CJmBN,EAASC,EInBhB,AJmBO,EInBa,AHoCAkE,CE5BCvG,EHWEoC,CHuBR,GMlCnB,ANkCsBS,CGvBU,GAAL,CCiBS,AJM/B,EGvBiCR,ACiBAuE,GDjBGX,QCiBjB,CAAlB,EDjBgC,EAAxC;AOhDA,AfgEA,AW1BE,ACRM,AJmBR,ACiBO,MDjBDH,CGXC,IAAIxF,IAAI,CAAb,AHWcD,EGXEC,IAAIN,IHWI,CInBXjC,CDQb,EAA4BuC,GAA5B,CCRM,CDQ2B,CCRX,aAAM5C,IAAN,CAAW8F,UAAU3B,UAArB,CAAhB;AG7BR,AfgEA,AW1BI,ACRG,AChBP,ALmCE,AElBF,ADmCK,AJML,QGvBQqE,CGXC5F,IAAI,CAAT,AHWU,EGXE+K,AHWd,UGXwB/K,CAAV,CAAZ;AIrCJ,AfgEA,AW1BG,ACRGqL,AChBN,ALmCE,AElBF,ADmCG,AJMH,MKzCM5D,CFkBC,MInBMgE,AJmBApM,GAAX,AElBc/C,IFkBIyD,KInBKtC,AFCC,CFkBxB,EAA0B,IInBf,CAAP,UFCsCnB,KAAlB,IAC1BA,+BAD0B,IAE1BA,oCAFA;AK9BA,AfgEA,AW1BC,ACRI,AChBL,ALmCIsJ,ACiBF,AJMF,MINMS,EDjBE9J,IAAJ,CAAS8C,IAAI/B,KCiBKiJ,EDjBT,CAAYd,MAAZ,CCiBP,CDjB2BC,GCiBGY,CDjBvB,CAAT,EAAoC,GAApC,EAAyCvG,MCiBM2G,CDjBCrH,GAAP,CAAzC,EAAsD,ECiBxD,CDjBE,CCiB0D;AMjE9D,AfgEA,AYlCI,AJmBD,AEhBH,ADiCI,AJMJ,MLRMR,ESEEwH,GGpCGgF,IAAP,IZkCe,CAAC1P,GSEG4K,CTFJ,EAAOjH,EAAP,KAAc,ASE7B,EAA+B;AMjEnC,AfgEE,AW1BF,ACRG,ACjBY,ALoCb,AEhBF,ADiCM,AJMN,GO7DE,KZqDMC,CanDgBoM,ALoCf/F,GCiBGqB,CDjBChE,CKpCE,CAAe4I,EbmDb,AQfR,CAAS,ACiBA5F,CIrDH,CLoCN,CKpC2B,ALoClC,EReqBtK,IAAN,GAAa,ASEA+K,GTF5B,SSEwC,CAAxB,CAAZ;AMjEN,AfgEE,AW1BF,ACRC,ACjBC,ALoCD,AEhBD,ADiCM,AJMN,COhEA,AJmCA,QRqBS,AanDAqE,GJqDG7D,OIrDOxH,CJqDCuH,KIrDX,EJqDkB,CIrDC,CAAnB,EJqDW,CIpDf4E,EJoD6BzF,MIpDrB,AJoDO,GAAuBlK,CIpDtC,GACC,AJmDyC+K,GAAJ,EAAS,CAAT,CAArC,YInDQ,MAAR,CADD,GAEE,OAAO4E,IAAP,KAAgB,QAAhB,GACCF,MAAMN,IAAN,CAAW,IAAX,EAAiBQ,IAAjB,CADD,GAEE,SAASA,IAAT,GACC,mBAAQ,MAAR,EAAgBA,IAAhB,CADD,GAEE,cAAcA,IAAd,GACCF,MAAMH,IAAN,CAAWK,IAAX,CADD,GAEC,kBAAOA,IAAP,EAAa,MAAb,CATH,GAaL,CAAC,SAASA,IAAT,GACC,mBAAQ,MAAR,CADD,GACmBF,MAAMN,IAD1B,EAEE3J,KAFF,CAEQ,IAFR,EAEcqJ,SAFd,CAbF;AEZF,AfgEI7O,AW1BJ,AEVC,AHKD,ADiCM,AJMN,ULRU,ASEAoK,gBAAgBI,SAApB,EAA+B;AMjErC,AfgEM,AW1BN,ACRA,AFGA,ADiCQ5C,AJMR,aLRa,KAAKvE,CSECsH,KTFN,MAAiB,CSEtB,CAAwB3K,GTFGP,CSECsK,GTFN,IAAa3G,GAAGlC,ESEEkJ,ETFL,CAAQ,IAAR,EAAc3K,ESErB,CAAJ,CTFW,CAA9B,ASEiD,CTFxD,ASE0B,CAAxB,EAA0DuL,KAA1D;AMjER,AfgEK,AW1BL,ACRA,AFGA,ADiCO,AJMP,KLXS,ESGH,EE1BG+D,IF6BE,UE7BX,CAAwBxI,QAAxB,EAAkC;AIrClC,AfgEIpG,AW1BF,ACRF,AFGA,ADkCQ,AJKD,MAAMmG,ELRLlG,AW1BAqL,KX0BJ,CSGUtH,CTHC,CW1BC,EAAd,OF6BuByD,OJKHrB,IILcrC,QJKFsC,GAAGD,EILZ,CAAyBnC,KJKhB,CAA3B,gBILkB,EAAjB;AMlER,AfgEM7D,AW1BJ,ACRF,AFGA,ADkCQ,MGrCF6O,AFGA3N,ECKEiB,KX0BKlC,EW1BE+F,ACRA,AFGA,ADkCA6D,CGrCCnK,AFGAuL,GEHD,CFGA,CEHM/L,CFGCgM,ECKE1E,CCRT,EZkCT,AU/BS,CV+Ba,AW1Bb,ECRe,AHqCAyD,ETHxB,AU/B0B,EV+BEnH,KSG1B,CTHF,CSGmC,CTHC,EAAC5C,EW1BRW,OAApB,CAA4B4N,IX0Bc,CW1B1C,EAAmCC,CX0BR,EAAqB7O,KAArB,AW1B3B,CAAb,CX0BI;Ae/DN,AfgEK,AW1BH,ACRA,AFGA,ADkCQ+D,AJKV,QMlCQA,ACRAL,AFGA4H,IEHIjM,KAAKS,CFGC,CCKC,AF6BAgF,CClCjB,IEHU,CAAa,GAAb,CAAV,CHqCQ,CAAqBlF,IAAI+J,WE7BD,CF6BaK,GE7B5B,EAAqB1H,IAArB,CAAjB,GF6BiC,CAAJ,EAAgC,CAAhC,CAArB;AMlEV,AfyDS,AWnBP,ACRA,AFGA,ADkCO,AJKT,GLfE,GY3BIyM,EFGE3L,KEHK0L,IFGIzD,EEHEzL,CDQT2I,ECRG,CAAU1I,AFGAuD,CCKrB,CAAaW,CCRF,CAAX,EFGA,ICKA,EAAuBsH,KAAvB,EAA8BlF,SAASF,KAAT,EAA9B;AIrCF,AfgEC,AW1BC,ACRA,AFGA,ADkCMuB,AJKR,CLlBA,KYxBMjG,CFGC,CCKCG,GCRGrC,AFGAqE,ICKI,ACRb,AFGa,CAAb,CCKcK,CDLEL,CDkCC6G,GClCGnH,GCKP,EAAWiI,CDLxB,EAA4B3H,CDkCtB,CE7BO,AF6BiBK,CClC9B,CCKA,CDLiC,KDkC3B,EAAkC6G,KAAlC;AMlER,AJsCE2D,ACRA,AFGE,ADkCG,AJKP,IAAInI,EO1CE,CAAC,CAAD,CP0CGD,CKvCCzE,CEHCgC,CDQC3D,ACRV,EAAY,CDQZ,CAAcoG,CDLCkF,ILuCI,EKvCE3H,CCKrB,ADLe,CAAb,CCKsBhC,IAAxB;AIrCF,AJsCE,ACREH,AFGA,ADkCC,AJKH,KIlBE,IEhBKG,ACRArC,CFGCsE,CDmCD,EE9BP,CCRYsC,GFGG,EEHR,CAAWvC,IAAI,CAAf,CAAL,MFGkB6E,IAAL,CAAU6C,IAAV,EAAgB1J,KAAKsG,IAArB,CAAb;AKhCJ,AJsCC,ACRG3I,AFGA,ADmCE,AJIF,UIJMqK,CGtCCrK,CFGCqC,IEHIuE,CFGC5G,IEHN,AFGP,CEHkB,CAAX,AHsCY0K,EGtCErG,CAAd,KAAoB,IHsCrB,EGtCN,GHsCoC,IAAlC,EAAwCqG;AMnE9C,AH8BG,AFGG,ADmCA,AJIF5D,UIJM4D,CCnCC,ALuCE1D,KKvCP,WDmCqB4D,IJIvB,CAA8B,KIJ5B,AJIF,EIJmC;AMnEvC,AJsCA,ACRE,AFGMqB,ADmCA9D,AJKF,MO3CA,CAACuH,IAAL,EAAWD,GFGG7O,GEHGF,AHsCA0H,CCnCX,CAAa8D,CEHR,CAAU1L,GAAV,EAAekP,EHsCpB,CAAuBnP,IGtCI,AFGA+D,ADmCA+F,EGtCtB,EFGQ,EAAoB,EAApB,CAAb,IDmCwCK,YAAb,CAAJ,EAAgC,CAAC,CAAjC,CAAvB;AMnER,AJsCA,ACRE,AFGM,ADmCD,AJKD,OIPA,EGpCGgF,IHuCE,CGvCGxN,EAAL,GP2Cc+E,GO3CDyI,CP2ChB,CAAsB,CAAC,EO3CFxN,EAAL,IAAWJ,KP2CFoF,GO3CUlH,IAAR,CAAxB,CAAP,AP2C2B,IAAe,EAAhB,EAAoBmH,SAA1C,KACAC,WAAWhC,OAAOe,EAAlB,IAAwB,EAN5B,EAQE;AU3EJ,AJsCA,ACRC,AFGK,ADoCE,AJOJ,COxDJ,KDkBMoJ,KDLK,GDoCGlH,GCpCR,KDoCgBF,OE/BtB,IF+BiC1D,aAAX,CAAyB6D,WAAzB,EAAd;AMpER,AJsCA,ADLQ2D,ADoCA5D,AJOJ,MMtCEmH,INsCInI,IIPIkB,ECpCE3H,CCKC,CAACsF,EAAD,ADLT,CAAaiG,CCKChG,EAAL,EAASC,EAAT,AF+BT,AJOoB,CIPC7F,CJOzB,GMtC6B,AF+BA8J,CCpCC/F,IAAb,EAAmBjC,KAAK4G,CDoCCyB,GCpCzB,EAA8BrI,KAAKiC,EDoCvB,CAAJ,CCpCR,CAAb,ADoCqD,CAAC,CAAjC,CAArB;AMpER,AJsCE,ACRF,AFGQ,ADoCA+D,AJOJ,SMtCK,KF+BKG,WAAN,CAAkBjI,IAAI8J,IE/BPpD,IAAd,CAAmBd,EAAnB,EF+BkCyE,EE/BT1E,EAAzB,GAA+B,GF+BV,CAAJ,EE/BoBC,AF+BU,CAAC,CE/BjB,AF+Bd,CAAlB,EE/B2CC,EAAX,GAAgB,KAAhB,GAAwBD,EAAxB,GAA6B,GAAnE;AIrCF,AJsCC,ACRD,AFGM,ADoCEkC,AJOJtB,CMxCJ,QNwCSD,EK3CE,GDoCG2B,GCpCR,IL2Ce,OIPb;AMpER,AH8BA,AFGQwD,ADoCD,AJOD,YAAMvI,IK3CI9C,EL2CE,EK3CV,CAAawL,GL2CGtF,SAASQ,GK3CGhD,CL2CZ,GK3CH,CAAb,YL2CF;AU3EN,AH8BA,AFGQ,ADoCH,AJOC,aAAO+C,KMtCE9D,WNsCcG,GAAhB,MACL2D,gBAAgB3D,GAAhB,IAAuBoD,QADlB,CAAP;AU3EN,AH8BA,AFPI,AD8CD,AJSE,KALD;AUxEJ,AH8BA,AFGG,ADoCD,AJSC,GAlBD,MISOwD,AJUF,WIVL;AMpEF,AH8BA,AFGE,ADoCD,AJUG,CIhHJ,QCkES2B,OAAP;AKhCF,AH8BA,AFGC,AL8CGlF,CKjEJ,QLiESD,YAAYA,QAAjB;AU9EJ,AH8BA,APiDG,kBIVYsD;AMpEf,AH8BA,AFGA,AL8CE,SAAOrD,GAAGD,QAAH,CAAP;AU9EF,AH8BA,AFGA,AL8CC,CAzBD,KOxBMgJ,cAAcxL,QAAQ;AG7B5B,AH8BE,AFGF,QEHQsB,aAAatB,KAAKsB,UAAxB;AG7BF,AH8BE,AFGF,AL8CA,QOjDQ7B,SAAS6B,WAAW7B,MAA1B;AG7BF,AH8BE,AFGF,AL8CA,QOjDQgM,YAAY,EAAlB;AG7BF,AH8BE,AFGF,AL8CA,OOjDO,IAAI1L,IAAI,CAAb,EAAgBA,IAAIN,MAApB,EAA4BM,GAA5B,EAAiC;AG7BnC,AH8BI,AFGJ,AL8CA,MAAMoC,EOjDE6F,QAAQ1G,KPiDK,MOjDMvB,CAAX,CAAZ,wBPkDF,CAACC,IAAD,EAAOrB,IAAP,KAAgB;AU/ElB,AH8BI,AFGJ,AL+CI,QOjDEqJ,APiDI/E,MOjDEqB,MPiDU,EOjDhB,mBPiDuBtE,IAAP,EAAa,OOhD7B,GPgDgB,CAAlB,cOhDO7C,IAAL,CAAU6K,MAAMC,WAAhB,EAA6BxI,MAA7B,KAAwC,CAF1C,EAGE;AGhCN,AHiCMgM,AFAN,AL+CIxI,MK/CE2B,ML+CQ1B,CK/CD,CAAClD,EEAE1D,EFAH,EEAP,AFAcoL,CEACM,AP+CjB,GAAsBrJ,CK/Cb,CEAP,CFAqBoJ,CL+CvB,IK/CS,KAAwB;AKhCrC,AHiCK,AFAH,AL+CE,QK/CIzG,CL+CG2B,UAAUzF,EK/CAwC,KAAKsB,AL+CtB,UK/CF;AKhCF,AHiCG,AFAD,AL+CC,CALkB,GAMnB,CAACtB,GKhDKP,CLgDN,EAAOd,IAAP,EKhDe2C,GLgDC,QKhDU7B,MAA1B;AKhCF,AHiCE,AFAA,ALgDE,OKhDG,CLgDGwD,COhDDwI,EFAE1L,IAAI,CAAb,EAAgBA,CEACN,CPgDG,EKhDAA,GEAb,GFAP,EEA4B,AFAAM,CEArB,EFAP,CEAgC0L,CFAC,MLgDNzL,GOhDe,CAAV,APgDZ,COhDb,CPgD0B,EOhDc,QPgD3B,CAAlB,UOhDsDyL,SAAT,CAA/C;AGhCF,AHiCC,AFAG,ALgDA,CO9DJ,OFcQzD,ALgDExK,QKhDM8D,ELgDI,SKhDOvB,CAAX,CAAZ,YLgDyBC,IAAT,CAAhB;AUhFJ,ALiCI,ALgDA,MAAI,MKhDIgI,MAAM1D,QAAd,kCLgD0D3B,IAAtD,CAA2DhE,IAA3D,CAAJ,EAAsE;AUhF1E,ALiCM,ALgDA,QOhDGnB,EPgDG2F,QOhDH3F,GPgDcsD,OAAOe,EAAxB;AUhFN,ALiCQH,ALgDFuB,QOjDYoI,MPiDFnI,GOjDEmI,MFCKrD,ALgDjB,GAAsB,EKhDpB,EAAsBN,KAAtB,EAA6BK,CLgDGpJ,IKhDhC,ALgDoB,GAAmB,UAAzC;AUhFN,ALiCQiG,ALgDFpD,WAAOhE,EKhDAwK,KEDEoD,AFCP,ALgDF,EKhDc1D,ALgDEpF,KKhDd,CLgDoBnF,CKhDD4K,GLgDL,CAAW9E,CKhDzB,SLgDmCG,gBAAV,CAA2BD,QAA3B,CAAX,CAAhB;AUhFN,ALiCQ,ALgDH,GAJD,MAIO;AUhFX,ALiCM,ALgDAF,cAAUC,SAAV,GAAsBvE,IAAtB;AUhFN,ALiCQ,ALgDF6C,WAAOhE,CKhDDwK,MAAMC,ALgDZ,EAAgB3F,MAAMnF,GKhDhB,CLgDU,CAAW8F,UAAU3B,OKh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AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC5cA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC/KA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjalVA;;AACA;;AAEO,IAAM2M,wBAAQ,SAARA,KAAQ,CAACC,IAAD,EAAOC,KAAP,EAAiB;AACpC,SAAO,IAAIhD,OAAJ,CAAY,UAACC,OAAD,EAAUgD,MAAV,EAAqB;AACtC,iCAAQ,oCAAR,EAA8C,oBAAMF,IAAN,CAA9C,EAA2D;AACzDC,aAAOA,SAASA,MAAME;AADmC,KAA3D,EAEGhD,IAFH,CAEQ,eAAO;AACbD,cAAQkD,GAAR;AACD,KAJD,EAIGC,KAJH,CAIS,iBAAS;AAChBH,aAAOI,KAAP;AACD,KAND;AAOD,GARM,CAAP;AASD,CAVM;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACHP;;AACA;;AACA;;;;;;;;;;AAEA,IAAIC,OAAO,EAAX;AACA,IAAIC,UAAU,KAAd;;AAEA,SAASC,aAAT,CAAuBC,MAAvB,EAA+B;AAC7B,MAAIC,OAAO,IAAInR,IAAJ,CAASkR,MAAT,CAAX;AACA,SAAOC,KAAKC,kBAAL,KAA4B,GAA5B,GAAkCD,KAAKE,kBAAL,EAAzC;AACD;;AAED,SAASC,OAAT,GAAmB;AACjBN,YAAU,IAAV;AACArN;AACA,uCAAaoN,KAAKA,KAAK5M,MAAL,GAAc,CAAnB,CAAb,EAAoCwJ,IAApC,CAAyC,gBAAQ;AAC/C,QAAM4D,UAAUC,KAAKC,MAAL,IAAeD,KAAKC,MAAL,CAAYC,SAA3B,IAAwCF,KAAKC,MAAL,CAAYC,SAAZ,CAAsBC,WAA9D,IAA6E,EAA7F;AACAZ,wCAAWA,IAAX,sBAAoBQ,OAApB;AACAP,cAAU,KAAV;AACArN;AACD,GALD;AAMD;;AAED,SAASA,MAAT,GAAkB;AAChB,uBAAK5E,SAAS6S,IAAT,CAAcC,aAAd,CAA4B,MAA5B,CAAL,mBACEd,KAAKe,GAAL,CACE;AAAA,WACE,sBADF,mBAEeC,GAAGC,GAFlB,EAE0BD,GAAGE,KAF7B,EAG2BF,GAAGG,KAH9B,EAG8CH,GAAGI,MAAH,CAAUC,QAHxD,EAGsEnB,cAAcc,GAAGI,MAAH,CAAUE,UAAxB,CAHtE;AAAA,GADF,CADF,EAQIrB,UAAU,YAAV,GAAyB,sBAAzB,mBAAkEM,OAAlE,CARJ;AAUD;;AAEDA","file":"src.42be044f.map","sourcesContent":["export const G = document.defaultView;\n\n// Node.CONSTANTS\n// 'cause some engine has no global Node defined\n// (i.e. Node, NativeScript, basicHTML ... )\nexport const ELEMENT_NODE = 1;\nexport const ATTRIBUTE_NODE = 2;\nexport const TEXT_NODE = 3;\nexport const COMMENT_NODE = 8;\nexport const DOCUMENT_FRAGMENT_NODE = 11;\n\n// HTML related constants\nexport const VOID_ELEMENTS = /^area|base|br|col|embed|hr|img|input|keygen|link|menuitem|meta|param|source|track|wbr$/i;\n\n// SVG related constants\nexport const OWNER_SVG_ELEMENT = 'ownerSVGElement';\nexport const SVG_NAMESPACE = 'http://www.w3.org/2000/svg';\n\n// Custom Elements / MutationObserver constants\nexport const CONNECTED = 'connected';\nexport const DISCONNECTED = 'dis' + CONNECTED;\n\n// hyperHTML related constants\nexport const EXPANDO = '_hyper: ';\nexport const SHOULD_USE_TEXT_CONTENT = /^style|textarea$/i;\nexport const UID = EXPANDO + ((Math.random() * new Date) | 0) + ';';\nexport const UIDC = '<!--' + UID + '-->';\n","import {G, UID} from './constants.js';\n\n// you know that kind of basics you need to cover\n// your use case only but you don't want to bloat the library?\n// There's even a package in here:\n// https://www.npmjs.com/package/poorlyfills\n\n// used to dispatch simple events\nlet Event = G.Event;\ntry {\n  new Event('Event');\n} catch(o_O) {\n  Event = function (type) {\n    const e = document.createEvent('Event');\n    e.initEvent(type, false, false);\n    return e;\n  };\n}\nexport {Event};\n\n// used to store template literals\nexport const Map = G.Map || function Map() {\n  const keys = [], values = [];\n  return {\n    get(obj) {\n      return values[keys.indexOf(obj)];\n    },\n    set(obj, value) {\n      values[keys.push(obj) - 1] = value;\n    }\n  };\n};\n\n// used to store wired content\nexport const WeakMap = G.WeakMap || function WeakMap() {\n  return {\n    get(obj) { return obj[UID]; },\n    set(obj, value) {\n      Object.defineProperty(obj, UID, {\n        configurable: true,\n        value\n      });\n    }\n  };\n};\n\n// used to store hyper.Components\nexport const WeakSet = G.WeakSet || function WeakSet() {\n  const wm = new WeakMap;\n  return {\n    add(obj) { wm.set(obj, true); },\n    has(obj) { return wm.get(obj) === true; }\n  };\n};\n\n// used to be sure IE9 or older Androids work as expected\nexport const isArray = Array.isArray || (toString =>\n  arr => toString.call(arr) === '[object Array]'\n)({}.toString);\n\nexport const trim = UID.trim || function () {\n  return this.replace(/^\\s+|\\s+$/g, '');\n};\n","import { UID } from '../shared/constants.js';\nimport { WeakMap } from '../shared/poorlyfills.js';\n\n// hyperHTML.Component is a very basic class\n// able to create Custom Elements like components\n// including the ability to listen to connect/disconnect\n// events via onconnect/ondisconnect attributes\n// Components can be created imperatively or declaratively.\n// The main difference is that declared components\n// will not automatically render on setState(...)\n// to simplify state handling on render.\nexport default function Component() {}\n\n// components will lazily define html or svg properties\n// as soon as these are invoked within the .render() method\n// Such render() method is not provided by the base class\n// but it must be available through the Component extend.\n// Declared components could implement a\n// render(props) method too and use props as needed.\nexport function setup(content) {\n  const children = new WeakMap;\n  const create = Object.create;\n  const createEntry = (wm, id, component) => {\n    wm.set(id, component);\n    return component;\n  };\n  const get = (Class, info, id) => {\n    switch (typeof id) {\n      case 'object':\n      case 'function':\n        const wm = info.w || (info.w = new WeakMap);\n        return wm.get(id) || createEntry(wm, id, new Class);\n      default:\n        const sm = info.p || (info.p = create(null));\n        return sm[id] || (sm[id] = new Class);\n    }\n  };\n  const set = context => {\n    const info = {w: null, p: null};\n    children.set(context, info);\n    return info;\n  };\n  Object.defineProperties(\n    Component,\n    {\n      for: {\n        configurable: true,\n        value(context, id) {\n          const info = children.get(context) || set(context);\n          return get(this, info, id == null ? 'default' : id);\n        }\n      }\n    }\n  );\n  Object.defineProperties(\n    Component.prototype,\n    {\n      handleEvent: {value(e) {\n        const ct = e.currentTarget;\n        this[\n          ('getAttribute' in ct && ct.getAttribute('data-call')) ||\n          ('on' + e.type)\n        ](e);\n      }},\n      html: lazyGetter('html', content),\n      svg: lazyGetter('svg', content),\n      state: lazyGetter('state', function () { return this.defaultState; }),\n      defaultState: {get() { return {}; }},\n      setState: {value(state, render) {\n        const target = this.state;\n        const source = typeof state === 'function' ? state.call(this, target) : state;\n        for (const key in source) target[key] = source[key];\n        if (render !== false) this.render();\n        return this;\n      }}\n    }\n  );\n}\n\n// instead of a secret key I could've used a WeakMap\n// However, attaching a property directly will result\n// into better performance with thousands of components\n// hanging around, and less memory pressure caused by the WeakMap\nconst lazyGetter = (type, fn) => {\n  const secret = '_' + type + '$';\n  return {\n    get() {\n      return this[secret] || (this[type] = fn.call(this, type));\n    },\n    set(value) {\n      Object.defineProperty(this, secret, {configurable: true, value});\n    }\n  };\n};\n","const intents = {};\nconst keys = [];\nconst hasOwnProperty = intents.hasOwnProperty;\n\nlet length = 0;\n\nexport default {\n\n  // hyperHTML.define('intent', (object, update) => {...})\n  // can be used to define a third parts update mechanism\n  // when every other known mechanism failed.\n  // hyper.define('user', info => info.name);\n  // hyper(node)`<p>${{user}}</p>`;\n  define: (intent, callback) => {\n    if (!(intent in intents)) {\n      length = keys.push(intent);\n    }\n    intents[intent] = callback;\n  },\n\n  // this method is used internally as last resort\n  // to retrieve a value out of an object\n  invoke: (object, callback) => {\n    for (let i = 0; i < length; i++) {\n      let key = keys[i];\n      if (hasOwnProperty.call(object, key)) {\n        return intents[key](object[key], callback);\n      }\n    }\n  }\n};\n","// these are tiny helpers to simplify most common operations needed here\nexport const create = (node, type) => doc(node).createElement(type);\nexport const doc = node => node.ownerDocument || node;\nexport const fragment = node => doc(node).createDocumentFragment();\nexport const text = (node, text) => doc(node).createTextNode(text);\n","// TODO:  I'd love to code-cover RegExp too here\n//        these are fundamental for this library\n\nconst spaces = ' \\\\f\\\\n\\\\r\\\\t';\nconst almostEverything = '[^ ' + spaces + '\\\\/>\"\\'=]+';\nconst attrName = '[ ' + spaces + ']+' + almostEverything;\nconst tagName = '<([A-Za-z]+[A-Za-z0-9:_-]*)((?:';\nconst attrPartials = '(?:=(?:\\'[^\\']*?\\'|\"[^\"]*?\"|<[^>]*?>|' + almostEverything + '))?)';\n\nconst attrSeeker = new RegExp(\n  tagName + attrName + attrPartials + '+)([ ' + spaces + ']*/?>)',\n  'g'\n);\n\nconst selfClosing = new RegExp(\n  tagName + attrName + attrPartials + '*)([ ' + spaces + ']*/>)',\n  'g'\n);\n\nexport {attrName, attrSeeker, selfClosing};\n","import {create, fragment, text} from './easy-dom.js';\n\nconst testFragment = fragment(document);\n\n// DOM4 node.append(...many)\nexport const hasAppend = 'append' in testFragment;\n\n// detect old browsers without HTMLTemplateElement content support\nexport const hasContent = 'content' in create(document, 'template');\n\n// IE 11 has problems with cloning templates: it \"forgets\" empty childNodes\ntestFragment.appendChild(text(testFragment, 'g'));\ntestFragment.appendChild(text(testFragment, ''));\nexport const hasDoomedCloneNode = testFragment.cloneNode(true).childNodes.length === 1;\n\n// old browsers need to fallback to cloneNode\n// Custom Elements V0 and V1 will work polyfilled\n// but native implementations need importNode instead\n// (specially Chromium and its old V0 implementation)\nexport const hasImportNode = 'importNode' in document;\n","import {attrName, attrSeeker} from './re.js';\n\nimport {\n  G,\n  OWNER_SVG_ELEMENT,\n  SVG_NAMESPACE,\n  UID,\n  UIDC\n} from './constants.js';\n\nimport {\n  hasAppend,\n  hasContent,\n  hasDoomedCloneNode,\n  hasImportNode\n} from './features-detection.js';\n\nimport {create, doc, fragment} from './easy-dom.js';\n\n// appends an array of nodes\n// to a generic node/fragment\n// When available, uses append passing all arguments at once\n// hoping that's somehow faster, even if append has more checks on type\nexport const append = hasAppend ?\n  (node, childNodes) => {\n    node.append.apply(node, childNodes);\n  } :\n  (node, childNodes) => {\n    const length = childNodes.length;\n    for (let i = 0; i < length; i++) {\n      node.appendChild(childNodes[i]);\n    }\n  };\n\nconst findAttributes = new RegExp('(' + attrName + '=)([\\'\"]?)' + UIDC + '\\\\2', 'gi');\nconst comments = ($0, $1, $2, $3) =>\n  '<' + $1 + $2.replace(findAttributes, replaceAttributes) + $3;\nconst replaceAttributes = ($0, $1, $2) => $1 + ($2 || '\"') + UID + ($2 || '\"');\n\n// given a node and a generic HTML content,\n// create either an SVG or an HTML fragment\n// where such content will be injected\nexport const createFragment = (node, html) =>\n  (OWNER_SVG_ELEMENT in node ?\n    SVGFragment :\n    HTMLFragment\n  )(node, html.replace(attrSeeker, comments));\n\n// IE/Edge shenanigans proof cloneNode\n// it goes through all nodes manually\n// instead of relying the engine to suddenly\n// merge nodes together\nconst cloneNode = hasDoomedCloneNode ?\n  node => {\n    const clone = node.cloneNode();\n    const childNodes = node.childNodes ||\n                      // this is an excess of caution\n                      // but some node, in IE, might not\n                      // have childNodes property.\n                      // The following fallback ensure working code\n                      // in older IE without compromising performance\n                      // or any other browser/engine involved.\n                      /* istanbul ignore next */\n                      [];\n    const length = childNodes.length;\n    for (let i = 0; i < length; i++) {\n      clone.appendChild(cloneNode(childNodes[i]));\n    }\n    return clone;\n  } :\n  // the following ignore is due code-coverage\n  // combination of not having document.importNode\n  // but having a working node.cloneNode.\n  // This shenario is common on older Android/WebKit browsers\n  // but basicHTML here tests just two major cases:\n  // with document.importNode or with broken cloneNode.\n  /* istanbul ignore next */\n  node => node.cloneNode(true);\n\n// used to import html into fragments\nexport const importNode = hasImportNode ?\n  (doc, node) => doc.importNode(node, true) :\n  (doc, node) => cloneNode(node)\n\n// just recycling a one-off array to use slice\n// in every needed place\nexport const slice = [].slice;\n\n// lazy evaluated, returns the unique identity\n// of a template literal, as tempalte literal itself.\n// By default, ES2015 template literals are unique\n// tag`a${1}z` === tag`a${2}z`\n// even if interpolated values are different\n// the template chunks are in a frozen Array\n// that is identical each time you use the same\n// literal to represent same static content\n// around its own interpolations.\nexport const unique = template => TL(template);\n\n// TL returns a unique version of the template\n// it needs lazy feature detection\n// (cannot trust literals with transpiled code)\nlet TL = template => {\n  if (\n    // TypeScript template literals are not standard\n    template.propertyIsEnumerable('raw') ||\n    (\n      // Firefox < 55 has not standard implementation neither\n      /Firefox\\/(\\d+)/.test((G.navigator || {}).userAgent) &&\n      parseFloat(RegExp.$1) < 55\n    )\n  ) {\n    // in these cases, address templates once\n    const templateObjects = {};\n    // but always return the same template\n    TL = template => {\n      const key = '_' + template.join(UID);\n      return templateObjects[key] || (\n        templateObjects[key] = template\n      );\n    };\n  }\n  else {\n    // make TL an identity like function\n    TL = template => template;\n  }\n  return TL(template);\n};\n\n// create document fragments via native template\n// with a fallback for browsers that won't be able\n// to deal with some injected element such <td> or others\nconst HTMLFragment = hasContent ?\n  (node, html) => {\n    const container = create(node, 'template');\n    container.innerHTML = html;\n    return container.content;\n  } :\n  (node, html) => {\n    const container = create(node, 'template');\n    const content = fragment(node);\n    if (/^[^\\S]*?<(col(?:group)?|t(?:head|body|foot|r|d|h))/i.test(html)) {\n      const selector = RegExp.$1;\n      container.innerHTML = '<table>' + html + '</table>';\n      append(content, slice.call(container.querySelectorAll(selector)));\n    } else {\n      container.innerHTML = html;\n      append(content, slice.call(container.childNodes));\n    }\n    return content;\n  };\n\n// creates SVG fragment with a fallback for IE that needs SVG\n// within the HTML content\nconst SVGFragment = hasContent ?\n  (node, html) => {\n    const content = fragment(node);\n    const container = doc(node).createElementNS(SVG_NAMESPACE, 'svg');\n    container.innerHTML = html;\n    append(content, slice.call(container.childNodes));\n    return content;\n  } :\n  (node, html) => {\n    const content = fragment(node);\n    const container = create(node, 'div');\n    container.innerHTML = '<svg xmlns=\"' + SVG_NAMESPACE + '\">' + html + '</svg>';\n    append(content, slice.call(container.firstChild.childNodes));\n    return content;\n  };\n","import { append } from '../shared/utils.js';\nimport { doc, fragment } from '../shared/easy-dom.js';\n\nexport default function Wire(childNodes) {\n  this.childNodes = childNodes;\n  this.length = childNodes.length;\n  this.first = childNodes[0];\n  this.last = childNodes[this.length - 1];\n}\n\n// when a wire is inserted, all its nodes will follow\nWire.prototype.insert = function insert() {\n  const df = fragment(this.first);\n  append(df, this.childNodes);\n  return df;\n};\n\n// when a wire is removed, all its nodes must be removed as well\nWire.prototype.remove = function remove() {\n  const first = this.first;\n  const last = this.last;\n  if (this.length === 2) {\n    last.parentNode.removeChild(last);\n  } else {\n    const range = doc(first).createRange();\n    range.setStartBefore(this.childNodes[1]);\n    range.setEndAfter(last);\n    range.deleteContents();\n  }\n  return first;\n};\n","import {\n  COMMENT_NODE,\n  DOCUMENT_FRAGMENT_NODE,\n  ELEMENT_NODE\n} from '../shared/constants.js';\n\n// every template literal interpolation indicates\n// a precise target in the DOM the template is representing.\n// `<p id=${'attribute'}>some ${'content'}</p>`\n// hyperHTML finds only once per template literal,\n// hence once per entire application life-cycle,\n// all nodes that are related to interpolations.\n// These nodes are stored as indexes used to retrieve,\n// once per upgrade, nodes that will change on each future update.\n// A path example is [2, 0, 1] representing the operation:\n// node.childNodes[2].childNodes[0].childNodes[1]\n// Attributes are addressed via their owner node and their name.\nconst createPath = node => {\n  const path = [];\n  let parentNode;\n  switch (node.nodeType) {\n    case ELEMENT_NODE:\n    case DOCUMENT_FRAGMENT_NODE:\n      parentNode = node;\n      break;\n    case COMMENT_NODE:\n      parentNode = node.parentNode;\n      prepend(path, parentNode, node);\n      break;\n    default:\n      parentNode = node.ownerElement;\n      break;\n  }\n  for (\n    node = parentNode;\n    (parentNode = parentNode.parentNode);\n    node = parentNode\n  ) {\n    prepend(path, parentNode, node);\n  }\n  return path;\n};\n\nconst prepend = (path, parent, node) => {\n  path.unshift(path.indexOf.call(parent.childNodes, node));\n};\n\nexport default {\n  create: (type, node, name) => ({type, name, node, path: createPath(node)}),\n  find: (node, path) => {\n    const length = path.length;\n    for (let i = 0; i < length; i++) {\n      node = node.childNodes[path[i]];\n    }\n    return node;\n  }\n}\n","// from https://github.com/developit/preact/blob/33fc697ac11762a1cb6e71e9847670d047af7ce5/src/constants.js\nconst IS_NON_DIMENSIONAL = /acit|ex(?:s|g|n|p|$)|rph|ows|mnc|ntw|ine[ch]|zoo|^ord/i;\n\n// style is handled as both string and object\n// even if the target is an SVG element (consistency)\nexport default (node, original, isSVG) => {\n  if (isSVG) {\n    const style = original.cloneNode(true);\n    style.value = '';\n    node.setAttributeNode(style);\n    return update(style, isSVG);\n  }\n  return update(node.style, isSVG);\n};\n\n// the update takes care or changing/replacing\n// only properties that are different or\n// in case of string, the whole node\nconst update = (style, isSVG) => {\n  let oldType, oldValue;\n  return newValue => {\n    switch (typeof newValue) {\n      case 'object':\n        if (newValue) {\n          if (oldType === 'object') {\n            if (!isSVG) {\n              if (oldValue !== newValue) {\n                for (const key in oldValue) {\n                  if (!(key in newValue)) {\n                    style[key] = '';\n                  }\n                }\n              }\n            }\n          } else {\n            if (isSVG) style.value = '';\n            else style.cssText = '';\n          }\n          const info = isSVG ? {} : style;\n          for (const key in newValue) {\n            const value = newValue[key];\n            info[key] = typeof value === 'number' &&\n                        !IS_NON_DIMENSIONAL.test(key) ?\n                          (value + 'px') : value;\n          }\n          oldType = 'object';\n          if (isSVG) style.value = toStyle((oldValue = info));\n          else oldValue = newValue;\n          break;\n        }\n      default:\n        if (oldValue != newValue) {\n          oldType = 'string';\n          oldValue = newValue;\n          if (isSVG) style.value = newValue || '';\n          else style.cssText = newValue || '';\n        }\n        break;\n    }\n  };\n};\n\nconst hyphen = /([^A-Z])([A-Z]+)/g;\nconst ized = ($0, $1, $2) => $1 + '-' + $2.toLowerCase();\nconst toStyle = object => {\n  const css = [];\n  for (const key in object) {\n    css.push(key.replace(hyphen, ized), ':', object[key], ';');\n  }\n  return css.join('');\n};","/* AUTOMATICALLY IMPORTED, DO NOT MODIFY */\n/*! (c) 2017 Andrea Giammarchi (ISC) */\n\n/**\n * This code is a revisited port of the snabbdom vDOM diffing logic,\n * the same that fuels as fork Vue.js or other libraries.\n * @credits https://github.com/snabbdom/snabbdom\n */\n\nconst identity = O => O;\n\nconst domdiff = (\n  parentNode,     // where changes happen\n  currentNodes,   // Array of current items/nodes\n  futureNodes,    // Array of future items/nodes\n  getNode,        // optional way to retrieve a node from an item\n  beforeNode      // optional item/node to use as insertBefore delimiter\n) => {\n  const get = getNode || identity;\n  const before = beforeNode == null ? null : get(beforeNode, 0);\n  let currentStart = 0, futureStart = 0;\n  let currentEnd = currentNodes.length - 1;\n  let currentStartNode = currentNodes[0];\n  let currentEndNode = currentNodes[currentEnd];\n  let futureEnd = futureNodes.length - 1;\n  let futureStartNode = futureNodes[0];\n  let futureEndNode = futureNodes[futureEnd];\n  while (currentStart <= currentEnd && futureStart <= futureEnd) {\n    if (currentStartNode == null) {\n      currentStartNode = currentNodes[++currentStart];\n    }\n    else if (currentEndNode == null) {\n      currentEndNode = currentNodes[--currentEnd];\n    }\n    else if (futureStartNode == null) {\n      futureStartNode = futureNodes[++futureStart];\n    }\n    else if (futureEndNode == null) {\n      futureEndNode = futureNodes[--futureEnd];\n    }\n    else if (currentStartNode == futureStartNode) {\n      currentStartNode = currentNodes[++currentStart];\n      futureStartNode = futureNodes[++futureStart];\n    }\n    else if (currentEndNode == futureEndNode) {\n      currentEndNode = currentNodes[--currentEnd];\n      futureEndNode = futureNodes[--futureEnd];\n    }\n    else if (currentStartNode == futureEndNode) {\n      parentNode.insertBefore(\n        get(currentStartNode, 1),\n        get(currentEndNode, -0).nextSibling\n      );\n      currentStartNode = currentNodes[++currentStart];\n      futureEndNode = futureNodes[--futureEnd];\n    }\n    else if (currentEndNode == futureStartNode) {\n      parentNode.insertBefore(\n        get(currentEndNode, 1),\n        get(currentStartNode, 0)\n      );\n      currentEndNode = currentNodes[--currentEnd];\n      futureStartNode = futureNodes[++futureStart];\n    }\n    else {\n      let index = currentNodes.indexOf(futureStartNode);\n      if (index < 0) {\n        parentNode.insertBefore(\n          get(futureStartNode, 1),\n          get(currentStartNode, 0)\n        );\n        futureStartNode = futureNodes[++futureStart];\n      }\n      else {\n        let el = currentNodes[index];\n        currentNodes[index] = null;\n        parentNode.insertBefore(\n          get(el, 1),\n          get(currentStartNode, 0)\n        );\n        futureStartNode = futureNodes[++futureStart];\n      }\n    }\n  }\n  if (currentStart <= currentEnd || futureStart <= futureEnd) {\n    if (currentStart > currentEnd) {\n      const pin = futureNodes[futureEnd + 1];\n      const place = pin == null ? before : get(pin, 0);\n      if (futureStart === futureEnd) {\n        parentNode.insertBefore(get(futureNodes[futureStart], 1), place);\n      }\n      else {\n        const fragment = parentNode.ownerDocument.createDocumentFragment();\n        while (futureStart <= futureEnd) {\n          fragment.appendChild(get(futureNodes[futureStart++], 1));\n        }\n        parentNode.insertBefore(fragment, place);\n      }\n    }\n    else {\n      if (currentNodes[currentStart] == null) currentStart++;\n      if (currentStart === currentEnd) {\n        parentNode.removeChild(get(currentNodes[currentStart], -1));\n      }\n      else {\n        const range = parentNode.ownerDocument.createRange();\n        range.setStartBefore(get(currentNodes[currentStart], -1));\n        range.setEndAfter(get(currentNodes[currentEnd], -1));\n        range.deleteContents();\n      }\n    }\n  }\n  return futureNodes;\n};\n\nexport default domdiff;\n","import {\n  CONNECTED, DISCONNECTED,\n  COMMENT_NODE, DOCUMENT_FRAGMENT_NODE, ELEMENT_NODE, TEXT_NODE,\n  OWNER_SVG_ELEMENT,\n  SHOULD_USE_TEXT_CONTENT,\n  UID, UIDC\n} from '../shared/constants.js';\n\nimport Component from '../classes/Component.js';\nimport Wire from '../classes/Wire.js';\nimport Path from './Path.js';\nimport Style from './Style.js';\nimport Intent from './Intent.js';\nimport domdiff from '../shared/domdiff.js';\nimport { create as createElement, text } from '../shared/easy-dom.js';\nimport { Event, WeakSet, isArray, trim } from '../shared/poorlyfills.js';\nimport { createFragment, slice } from '../shared/utils.js';\n\n// hyper.Component have a connected/disconnected\n// mechanism provided by MutationObserver\n// This weak set is used to recognize components\n// as DOM node that needs to trigger connected/disconnected events\nconst components = new WeakSet;\n\n// a basic dictionary used to filter already cached attributes\n// while looking for special hyperHTML values.\nfunction Cache() {}\nCache.prototype = Object.create(null);\n\n// returns an intent to explicitly inject content as html\nconst asHTML = html => ({html});\n\n// returns nodes from wires and components\nconst asNode = (item, i) => {\n  return 'ELEMENT_NODE' in item ?\n    item :\n    (item.constructor === Wire ?\n      // in the Wire case, the content can be\n      // removed, post-pended, inserted, or pre-pended and\n      // all these cases are handled by domdiff already\n      /* istanbul ignore next */\n      ((1 / i) < 0 ?\n        (i ? item.remove() : item.last) :\n        (i ? item.insert() : item.first)) :\n      asNode(item.render(), i));\n}\n\n// returns true if domdiff can handle the value\nconst canDiff = value =>  'ELEMENT_NODE' in value ||\nvalue instanceof Wire ||\nvalue instanceof Component;\n\n// updates are created once per context upgrade\n// within the main render function (../hyper/render.js)\n// These are an Array of callbacks to invoke passing\n// each interpolation value.\n// Updates can be related to any kind of content,\n// attributes, or special text-only cases such <style>\n// elements or <textarea>\nconst create = (root, paths) => {\n  const updates = [];\n  const length = paths.length;\n  for (let i = 0; i < length; i++) {\n    const info = paths[i];\n    const node = Path.find(root, info.path);\n    switch (info.type) {\n      case 'any':\n        updates.push(setAnyContent(node, []));\n        break;\n      case 'attr':\n        updates.push(setAttribute(node, info.name, info.node));\n        break;\n      case 'text':\n        updates.push(setTextContent(node));\n        break;\n    }\n  }\n  return updates;\n};\n\n// finding all paths is a one-off operation performed\n// when a new template literal is used.\n// The goal is to map all target nodes that will be\n// used to update content/attributes every time\n// the same template literal is used to create content.\n// The result is a list of paths related to the template\n// with all the necessary info to create updates as\n// list of callbacks that target directly affected nodes.\nconst find = (node, paths, parts) => {\n  const childNodes = node.childNodes;\n  const length = childNodes.length;\n  for (let i = 0; i < length; i++) {\n    let child = childNodes[i];\n    switch (child.nodeType) {\n      case ELEMENT_NODE:\n        findAttributes(child, paths, parts);\n        find(child, paths, parts);\n        break;\n      case COMMENT_NODE:\n        if (child.textContent === UID) {\n          parts.shift();\n          paths.push(\n            // basicHTML or other non standard engines\n            // might end up having comments in nodes\n            // where they shouldn't, hence this check.\n            SHOULD_USE_TEXT_CONTENT.test(node.nodeName) ?\n              Path.create('text', node) :\n              Path.create('any', child)\n          );\n        }\n        break;\n      case TEXT_NODE:\n        // the following ignore is actually covered by browsers\n        // only basicHTML ends up on previous COMMENT_NODE case\n        // instead of TEXT_NODE because it knows nothing about\n        // special style or textarea behavior\n        /* istanbul ignore if */\n        if (\n          SHOULD_USE_TEXT_CONTENT.test(node.nodeName) &&\n          trim.call(child.textContent) === UIDC\n        ) {\n          parts.shift();\n          paths.push(Path.create('text', node));\n        }\n        break;\n    }\n  }\n};\n\n// attributes are searched via unique hyperHTML id value.\n// Despite HTML being case insensitive, hyperHTML is able\n// to recognize attributes by name in a caseSensitive way.\n// This plays well with Custom Elements definitions\n// and also with XML-like environments, without trusting\n// the resulting DOM but the template literal as the source of truth.\n// IE/Edge has a funny bug with attributes and these might be duplicated.\n// This is why there is a cache in charge of being sure no duplicated\n// attributes are ever considered in future updates.\nconst findAttributes = (node, paths, parts) => {\n  const cache = new Cache;\n  const attributes = node.attributes;\n  const array = slice.call(attributes);\n  const remove = [];\n  const length = array.length;\n  for (let i = 0; i < length; i++) {\n    const attribute = array[i];\n    if (attribute.value === UID) {\n      const name = attribute.name;\n      // the following ignore is covered by IE\n      // and the IE9 double viewBox test\n      /* istanbul ignore else */\n      if (!(name in cache)) {\n        const realName = parts.shift().replace(/^(?:|[\\S\\s]*?\\s)(\\S+?)=['\"]?$/, '$1');\n        cache[name] = attributes[realName] ||\n                      // the following ignore is covered by browsers\n                      // while basicHTML is already case-sensitive\n                      /* istanbul ignore next */\n                      attributes[realName.toLowerCase()];\n        paths.push(Path.create('attr', cache[name], realName));\n      }\n      remove.push(attribute);\n    }\n  }\n  const len = remove.length;\n  for (let i = 0; i < len; i++) {\n    node.removeAttributeNode(remove[i]);\n  }\n\n  // This is a very specific Firefox/Safari issue\n  // but since it should be a not so common pattern,\n  // it's probably worth patching regardless.\n  // Basically, scripts created through strings are death.\n  // You need to create fresh new scripts instead.\n  // TODO: is there any other node that needs such nonsense ?\n  const nodeName = node.nodeName;\n  if (/^script$/i.test(nodeName)) {\n    const script = createElement(node, nodeName);\n    for (let i = 0; i < attributes.length; i++) {\n      script.setAttributeNode(attributes[i].cloneNode(true));\n    }\n    script.textContent = node.textContent;\n    node.parentNode.replaceChild(script, node);\n  }\n};\n\n// when a Promise is used as interpolation value\n// its result must be parsed once resolved.\n// This callback is in charge of understanding what to do\n// with a returned value once the promise is resolved.\nconst invokeAtDistance = (value, callback) => {\n  callback(value.placeholder);\n  if ('text' in value) {\n    Promise.resolve(value.text).then(String).then(callback);\n  } else if ('any' in value) {\n    Promise.resolve(value.any).then(callback);\n  } else if ('html' in value) {\n    Promise.resolve(value.html).then(asHTML).then(callback);\n  } else {\n    Promise.resolve(Intent.invoke(value, callback)).then(callback);\n  }\n};\n\n// quick and dirty way to check for Promise/ish values\nconst isPromise_ish = value => value != null && 'then' in value;\n\n// in a hyper(node)`<div>${content}</div>` case\n// everything could happen:\n//  * it's a JS primitive, stored as text\n//  * it's null or undefined, the node should be cleaned\n//  * it's a component, update the content by rendering it\n//  * it's a promise, update the content once resolved\n//  * it's an explicit intent, perform the desired operation\n//  * it's an Array, resolve all values if Promises and/or\n//    update the node with the resulting list of content\nconst setAnyContent = (node, childNodes) => {\n  let fastPath = false;\n  let oldValue;\n  const anyContent = value => {\n    switch (typeof value) {\n      case 'string':\n      case 'number':\n      case 'boolean':\n        if (fastPath) {\n          if (oldValue !== value) {\n            oldValue = value;\n            childNodes[0].textContent = value;\n          }\n        } else {\n          fastPath = true;\n          oldValue = value;\n          childNodes = domdiff(\n            node.parentNode,\n            childNodes,\n            [text(node, value)],\n            asNode,\n            node\n          );\n        }\n        break;\n      case 'object':\n      case 'undefined':\n        if (value == null) {\n          fastPath = false;\n          childNodes = domdiff(\n            node.parentNode,\n            childNodes,\n            [],\n            asNode,\n            node\n          );\n          break;\n        }\n      default:\n        fastPath = false;\n        oldValue = value;\n        if (isArray(value)) {\n          if (value.length === 0) {\n            if (childNodes.length) {\n              childNodes = domdiff(\n                node.parentNode,\n                childNodes,\n                [],\n                asNode,\n                node\n              );\n            }\n          } else {\n            switch (typeof value[0]) {\n              case 'string':\n              case 'number':\n              case 'boolean':\n                anyContent({html: value});\n                break;\n              case 'object':\n                if (isArray(value[0])) {\n                  value = value.concat.apply([], value);\n                }\n                if (isPromise_ish(value[0])) {\n                  Promise.all(value).then(anyContent);\n                  break;\n                }\n              default:\n                childNodes = domdiff(\n                  node.parentNode,\n                  childNodes,\n                  value,\n                  asNode,\n                  node\n                );\n                break;\n            }\n          }\n        } else if (canDiff(value)) {\n          childNodes = domdiff(\n            node.parentNode,\n            childNodes,\n            value.nodeType === DOCUMENT_FRAGMENT_NODE ?\n              slice.call(value.childNodes) :\n              [value],\n            asNode,\n            node\n          );\n        } else if (isPromise_ish(value)) {\n          value.then(anyContent);\n        } else if ('placeholder' in value) {\n          invokeAtDistance(value, anyContent);\n        } else if ('text' in value) {\n          anyContent(String(value.text));\n        } else if ('any' in value) {\n          anyContent(value.any);\n        } else if ('html' in value) {\n          childNodes = domdiff(\n            node.parentNode,\n            childNodes,\n            slice.call(\n              createFragment(\n                node,\n                [].concat(value.html).join('')\n              ).childNodes\n            ),\n            asNode,\n            node\n          );\n        } else if ('length' in value) {\n          anyContent(slice.call(value));\n        } else {\n          anyContent(Intent.invoke(value, anyContent));\n        }\n        break;\n    }\n  };\n  return anyContent;\n};\n\n// there are four kind of attributes, and related behavior:\n//  * events, with a name starting with `on`, to add/remove event listeners\n//  * special, with a name present in their inherited prototype, accessed directly\n//  * regular, accessed through get/setAttribute standard DOM methods\n//  * style, the only regular attribute that also accepts an object as value\n//    so that you can style=${{width: 120}}. In this case, the behavior has been\n//    fully inspired by Preact library and its simplicity.\nconst setAttribute = (node, name, original) => {\n  const isSVG = OWNER_SVG_ELEMENT in node;\n  let oldValue;\n  // if the attribute is the style one\n  // handle it differently from others\n  if (name === 'style') {\n    return Style(node, original, isSVG);\n  }\n  // the name is an event one,\n  // add/remove event listeners accordingly\n  else if (/^on/.test(name)) {\n    let type = name.slice(2);\n    if (type === CONNECTED || type === DISCONNECTED) {\n      if (notObserving) {\n        notObserving = false;\n        observe();\n      }\n      components.add(node);\n    }\n    else if (name.toLowerCase() in node) {\n      type = type.toLowerCase();\n    }\n    return newValue => {\n      if (oldValue !== newValue) {\n        if (oldValue) node.removeEventListener(type, oldValue, false);\n        oldValue = newValue;\n        if (newValue) node.addEventListener(type, newValue, false);\n      }\n    };\n  }\n  // the attribute is special ('value' in input)\n  // and it's not SVG *or* the name is exactly data,\n  // in this case assign the value directly\n  else if (name === 'data' || (!isSVG && name in node)) {\n    return newValue => {\n      if (oldValue !== newValue) {\n        oldValue = newValue;\n        if (node[name] !== newValue) {\n          node[name] = newValue;\n          if (newValue == null) {\n            node.removeAttribute(name);\n          }\n        }\n      }\n    };\n  }\n  // in every other case, use the attribute node as it is\n  // update only the value, set it as node only when/if needed\n  else {\n    let owner = false;\n    const attribute = original.cloneNode(true);\n    return newValue => {\n      if (oldValue !== newValue) {\n        oldValue = newValue;\n        if (attribute.value !== newValue) {\n          if (newValue == null) {\n            if (owner) {\n              owner = false;\n              node.removeAttributeNode(attribute);\n            }\n            attribute.value = newValue;\n          } else {\n            attribute.value = newValue;\n            if (!owner) {\n              owner = true;\n              node.setAttributeNode(attribute);\n            }\n          }\n        }\n      }\n    };\n  }\n};\n\n// style or textareas don't accept HTML as content\n// it's pointless to transform or analyze anything\n// different from text there but it's worth checking\n// for possible defined intents.\nconst setTextContent = node => {\n  // avoid hyper comments inside textarea/style when value is undefined\n  let oldValue = '';\n  const textContent = value => {\n    if (oldValue !== value) {\n      oldValue = value;\n      if (typeof value === 'object' && value) {\n        if (isPromise_ish(value)) {\n          value.then(textContent);\n        } else if ('placeholder' in value) {\n          invokeAtDistance(value, textContent);\n        } else if ('text' in value) {\n          textContent(String(value.text));\n        } else if ('any' in value) {\n          textContent(value.any);\n        } else if ('html' in value) {\n          textContent([].concat(value.html).join(''));\n        } else if ('length' in value) {\n          textContent(slice.call(value).join(''));\n        } else {\n          textContent(Intent.invoke(value, textContent));\n        }\n      } else {\n        node.textContent = value == null ? '' : value;\n      }\n    }\n  };\n  return textContent;\n};\n\nexport default {create, find};\n\n// hyper.Components might need connected/disconnected notifications\n// used by components and their onconnect/ondisconnect callbacks.\n// When one of these callbacks is encountered,\n// the document starts being observed.\nlet notObserving = true;\nfunction observe() {\n\n  // when hyper.Component related DOM nodes\n  // are appended or removed from the live tree\n  // these might listen to connected/disconnected events\n  // This utility is in charge of finding all components\n  // involved in the DOM update/change and dispatch\n  // related information to them\n  const dispatchAll = (nodes, type) => {\n    const event = new Event(type);\n    const length = nodes.length;\n    for (let i = 0; i < length; i++) {\n      let node = nodes[i];\n      if (node.nodeType === ELEMENT_NODE) {\n        dispatchTarget(node, event);\n      }\n    }\n  };\n\n  // the way it's done is via the components weak set\n  // and recursively looking for nested components too\n  const dispatchTarget = (node, event) => {\n    if (components.has(node)) {\n      node.dispatchEvent(event);\n    }\n\n    const children = node.children;\n    const length = children.length;\n    for (let i = 0; i < length; i++) {\n      dispatchTarget(children[i], event);\n    }\n  }\n\n  // The MutationObserver is the best way to implement that\n  // but there is a fallback to deprecated DOMNodeInserted/Removed\n  // so that even older browsers/engines can help components life-cycle\n  try {\n    (new MutationObserver(records => {\n      const length = records.length;\n      for (let i = 0; i < length; i++) {\n        let record = records[i];\n        dispatchAll(record.removedNodes, DISCONNECTED);\n        dispatchAll(record.addedNodes, CONNECTED);\n      }\n    })).observe(document, {subtree: true, childList: true});\n  } catch(o_O) {\n    document.addEventListener('DOMNodeRemoved', event => {\n      dispatchAll([event.target], DISCONNECTED);\n    }, false);\n    document.addEventListener('DOMNodeInserted', event => {\n      dispatchAll([event.target], CONNECTED);\n    }, false);\n  }\n}\n","import {Map, WeakMap} from '../shared/poorlyfills.js';\nimport {UIDC, VOID_ELEMENTS} from '../shared/constants.js';\nimport Updates from '../objects/Updates.js';\nimport {\n  createFragment,\n  importNode,\n  unique\n} from '../shared/utils.js';\n\nimport {selfClosing} from '../shared/re.js';\n\n// a weak collection of contexts that\n// are already known to hyperHTML\nconst bewitched = new WeakMap;\n\n// the collection of all template literals\n// since these are unique and immutable\n// for the whole application life-cycle\nconst templates = new Map;\n\n// better known as hyper.bind(node), the render is\n// the main tag function in charge of fully upgrading\n// or simply updating, contexts used as hyperHTML targets.\n// The `this` context is either a regular DOM node or a fragment.\nfunction render(template) {\n  const wicked = bewitched.get(this);\n  if (wicked && wicked.template === unique(template)) {\n    update.apply(wicked.updates, arguments);\n  } else {\n    upgrade.apply(this, arguments);\n  }\n  return this;\n}\n\n// an upgrade is in charge of collecting template info,\n// parse it once, if unknown, to map all interpolations\n// as single DOM callbacks, relate such template\n// to the current context, and render it after cleaning the context up\nfunction upgrade(template) {\n  template = unique(template);\n  const info =  templates.get(template) ||\n                createTemplate.call(this, template);\n  const fragment = importNode(this.ownerDocument, info.fragment);\n  const updates = Updates.create(fragment, info.paths);\n  bewitched.set(this, {template, updates});\n  update.apply(updates, arguments);\n  this.textContent = '';\n  this.appendChild(fragment);\n}\n\n// an update simply loops over all mapped DOM operations\nfunction update() {\n  const length = arguments.length;\n  for (let i = 1; i < length; i++) {\n    this[i - 1](arguments[i]);\n  }\n}\n\n// a template can be used to create a document fragment\n// aware of all interpolations and with a list\n// of paths used to find once those nodes that need updates,\n// no matter if these are attributes, text nodes, or regular one\nfunction createTemplate(template) {\n  const paths = [];\n  const html = template.join(UIDC).replace(SC_RE, SC_PLACE);\n  const fragment = createFragment(this, html);\n  Updates.find(fragment, paths, template.slice());\n  const info = {fragment, paths};\n  templates.set(template, info);\n  return info;\n}\n\n// some node could be special though, like a custom element\n// with a self closing tag, which should work through these changes.\nconst SC_RE = selfClosing;\nconst SC_PLACE = ($0, $1, $2) => {\n  return VOID_ELEMENTS.test($1) ? $0 : ('<' + $1 + $2 + '></' + $1 + '>');\n};\n\nexport default render;\n","import {ELEMENT_NODE, SVG_NAMESPACE} from '../shared/constants.js';\nimport {WeakMap, trim} from '../shared/poorlyfills.js';\nimport {fragment} from '../shared/easy-dom.js';\nimport {append, slice, unique} from '../shared/utils.js';\nimport Wire from '../classes/Wire.js';\nimport render from './render.js';\n\n// all wires used per each context\nconst wires = new WeakMap;\n\n// A wire is a callback used as tag function\n// to lazily relate a generic object to a template literal.\n// hyper.wire(user)`<div id=user>${user.name}</div>`; => the div#user\n// This provides the ability to have a unique DOM structure\n// related to a unique JS object through a reusable template literal.\n// A wire can specify a type, as svg or html, and also an id\n// via html:id or :id convention. Such :id allows same JS objects\n// to be associated to different DOM structures accordingly with\n// the used template literal without losing previously rendered parts.\nconst wire = (obj, type) => obj == null ?\n  content(type || 'html') :\n  weakly(obj, type || 'html');\n\n// A wire content is a virtual reference to one or more nodes.\n// It's represented by either a DOM node, or an Array.\n// In both cases, the wire content role is to simply update\n// all nodes through the list of related callbacks.\n// In few words, a wire content is like an invisible parent node\n// in charge of updating its content like a bound element would do.\nconst content = type => {\n  let wire, container, content, template, updates;\n  return function (statics) {\n    statics = unique(statics);\n    let setup = template !== statics;\n    if (setup) {\n      template = statics;\n      content = fragment(document);\n      container = type === 'svg' ?\n        document.createElementNS(SVG_NAMESPACE, 'svg') :\n        content;\n      updates = render.bind(container);\n    }\n    updates.apply(null, arguments);\n    if (setup) {\n      if (type === 'svg') {\n        append(content, slice.call(container.childNodes));\n      }\n      wire = wireContent(content);\n    }\n    return wire;\n  };\n};\n\n// wires are weakly created through objects.\n// Each object can have multiple wires associated\n// and this is thanks to the type + :id feature.\nconst weakly = (obj, type) => {\n  const i = type.indexOf(':');\n  let wire = wires.get(obj);\n  let id = type;\n  if (-1 < i) {\n    id = type.slice(i + 1);\n    type = type.slice(0, i) || 'html';\n  }\n  if (!wire) wires.set(obj, wire = {});\n  return wire[id] || (wire[id] = content(type));\n};\n\n// a document fragment loses its nodes as soon\n// as it's appended into another node.\n// This would easily lose wired content\n// so that on a second render call, the parent\n// node wouldn't know which node was there\n// associated to the interpolation.\n// To prevent hyperHTML to forget about wired nodes,\n// these are either returned as Array or, if there's ony one entry,\n// as single referenced node that won't disappear from the fragment.\n// The initial fragment, at this point, would be used as unique reference.\nconst wireContent = node => {\n  const childNodes = node.childNodes;\n  const length = childNodes.length;\n  const wireNodes = [];\n  for (let i = 0; i < length; i++) {\n    let child = childNodes[i];\n    if (\n      child.nodeType === ELEMENT_NODE ||\n      trim.call(child.textContent).length !== 0\n    ) {\n      wireNodes.push(child);\n    }\n  }\n  return wireNodes.length === 1 ? wireNodes[0] : new Wire(wireNodes);\n};\n\nexport { content, weakly };\nexport default wire;\n","/*! (c) Andrea Giammarchi (ISC) */\n\nimport Component, {setup} from './classes/Component.js';\nimport Intent from './objects/Intent.js';\nimport wire, {content, weakly} from './hyper/wire.js';\nimport render from './hyper/render.js';\nimport diff from './shared/domdiff.js';\n\n// all functions are self bound to the right context\n// you can do the following\n// const {bind, wire} = hyperHTML;\n// and use them right away: bind(node)`hello!`;\nconst bind = context => render.bind(context);\nconst define = Intent.define;\n\nhyper.Component = Component;\nhyper.bind = bind;\nhyper.define = define;\nhyper.diff = diff;\nhyper.hyper = hyper;\nhyper.wire = wire;\n\n// the wire content is the lazy defined\n// html or svg property of each hyper.Component\nsetup(content);\n\n// everything is exported directly or through the\n// hyperHTML callback, when used as top level script\nexport {Component, bind, define, diff, hyper, wire};\n\n// by default, hyperHTML is a smart function\n// that \"magically\" understands what's the best\n// thing to do with passed arguments\nexport default function hyper(HTML) {\n  return arguments.length < 2 ?\n    (HTML == null ?\n      content('html') :\n      (typeof HTML === 'string' ?\n        hyper.wire(null, HTML) :\n        ('raw' in HTML ?\n          content('html')(HTML) :\n          ('nodeType' in HTML ?\n            hyper.bind(HTML) :\n            weakly(HTML, 'html')\n          )\n        )\n      )) :\n    ('raw' in HTML ?\n      content('html') : hyper.wire\n    ).apply(null, arguments);\n}\n","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar ClientError = /** @class */ (function (_super) {\n    __extends(ClientError, _super);\n    function ClientError(response, request) {\n        var _this = this;\n        var message = ClientError.extractMessage(response) + \": \" + JSON.stringify({ response: response, request: request });\n        _this = _super.call(this, message) || this;\n        _this.response = response;\n        _this.request = request;\n        // this is needed as Safari doesn't support .captureStackTrace\n        /* tslint:disable-next-line */\n        if (typeof Error.captureStackTrace === 'function') {\n            Error.captureStackTrace(_this, ClientError);\n        }\n        return _this;\n    }\n    ClientError.extractMessage = function (response) {\n        try {\n            return response.errors[0].message;\n        }\n        catch (e) {\n            return \"GraphQL Error (Code: \" + response.status + \")\";\n        }\n    };\n    return ClientError;\n}(Error));\nexports.ClientError = ClientError;\n//# sourceMappingURL=types.js.map","(function(self) {\n\n  if (self.fetch) {\n    return\n  }\n\n  var support = {\n    searchParams: 'URLSearchParams' in self,\n    iterable: 'Symbol' in self && 'iterator' in Symbol,\n    blob: 'FileReader' in self && 'Blob' in self && (function() {\n      try {\n        new Blob();\n        return true\n      } catch(e) {\n        return false\n      }\n    })(),\n    formData: 'FormData' in self,\n    arrayBuffer: 'ArrayBuffer' in self\n  };\n\n  if (support.arrayBuffer) {\n    var viewClasses = [\n      '[object Int8Array]',\n      '[object Uint8Array]',\n      '[object Uint8ClampedArray]',\n      '[object Int16Array]',\n      '[object Uint16Array]',\n      '[object Int32Array]',\n      '[object Uint32Array]',\n      '[object Float32Array]',\n      '[object Float64Array]'\n    ];\n\n    var isDataView = function(obj) {\n      return obj && DataView.prototype.isPrototypeOf(obj)\n    };\n\n    var isArrayBufferView = ArrayBuffer.isView || function(obj) {\n      return obj && viewClasses.indexOf(Object.prototype.toString.call(obj)) > -1\n    };\n  }\n\n  function normalizeName(name) {\n    if (typeof name !== 'string') {\n      name = String(name);\n    }\n    if (/[^a-z0-9\\-#$%&'*+.\\^_`|~]/i.test(name)) {\n      throw new TypeError('Invalid character in header field name')\n    }\n    return name.toLowerCase()\n  }\n\n  function normalizeValue(value) {\n    if (typeof value !== 'string') {\n      value = String(value);\n    }\n    return value\n  }\n\n  // Build a destructive iterator for the value list\n  function iteratorFor(items) {\n    var iterator = {\n      next: function() {\n        var value = items.shift();\n        return {done: value === undefined, value: value}\n      }\n    };\n\n    if (support.iterable) {\n      iterator[Symbol.iterator] = function() {\n        return iterator\n      };\n    }\n\n    return iterator\n  }\n\n  function Headers(headers) {\n    this.map = {};\n\n    if (headers instanceof Headers) {\n      headers.forEach(function(value, name) {\n        this.append(name, value);\n      }, this);\n    } else if (Array.isArray(headers)) {\n      headers.forEach(function(header) {\n        this.append(header[0], header[1]);\n      }, this);\n    } else if (headers) {\n      Object.getOwnPropertyNames(headers).forEach(function(name) {\n        this.append(name, headers[name]);\n      }, this);\n    }\n  }\n\n  Headers.prototype.append = function(name, value) {\n    name = normalizeName(name);\n    value = normalizeValue(value);\n    var oldValue = this.map[name];\n    this.map[name] = oldValue ? oldValue+','+value : value;\n  };\n\n  Headers.prototype['delete'] = function(name) {\n    delete this.map[normalizeName(name)];\n  };\n\n  Headers.prototype.get = function(name) {\n    name = normalizeName(name);\n    return this.has(name) ? this.map[name] : null\n  };\n\n  Headers.prototype.has = function(name) {\n    return this.map.hasOwnProperty(normalizeName(name))\n  };\n\n  Headers.prototype.set = function(name, value) {\n    this.map[normalizeName(name)] = normalizeValue(value);\n  };\n\n  Headers.prototype.forEach = function(callback, thisArg) {\n    for (var name in this.map) {\n      if (this.map.hasOwnProperty(name)) {\n        callback.call(thisArg, this.map[name], name, this);\n      }\n    }\n  };\n\n  Headers.prototype.keys = function() {\n    var items = [];\n    this.forEach(function(value, name) { items.push(name); });\n    return iteratorFor(items)\n  };\n\n  Headers.prototype.values = function() {\n    var items = [];\n    this.forEach(function(value) { items.push(value); });\n    return iteratorFor(items)\n  };\n\n  Headers.prototype.entries = function() {\n    var items = [];\n    this.forEach(function(value, name) { items.push([name, value]); });\n    return iteratorFor(items)\n  };\n\n  if (support.iterable) {\n    Headers.prototype[Symbol.iterator] = Headers.prototype.entries;\n  }\n\n  function consumed(body) {\n    if (body.bodyUsed) {\n      return Promise.reject(new TypeError('Already read'))\n    }\n    body.bodyUsed = true;\n  }\n\n  function fileReaderReady(reader) {\n    return new Promise(function(resolve, reject) {\n      reader.onload = function() {\n        resolve(reader.result);\n      };\n      reader.onerror = function() {\n        reject(reader.error);\n      };\n    })\n  }\n\n  function readBlobAsArrayBuffer(blob) {\n    var reader = new FileReader();\n    var promise = fileReaderReady(reader);\n    reader.readAsArrayBuffer(blob);\n    return promise\n  }\n\n  function readBlobAsText(blob) {\n    var reader = new FileReader();\n    var promise = fileReaderReady(reader);\n    reader.readAsText(blob);\n    return promise\n  }\n\n  function readArrayBufferAsText(buf) {\n    var view = new Uint8Array(buf);\n    var chars = new Array(view.length);\n\n    for (var i = 0; i < view.length; i++) {\n      chars[i] = String.fromCharCode(view[i]);\n    }\n    return chars.join('')\n  }\n\n  function bufferClone(buf) {\n    if (buf.slice) {\n      return buf.slice(0)\n    } else {\n      var view = new Uint8Array(buf.byteLength);\n      view.set(new Uint8Array(buf));\n      return view.buffer\n    }\n  }\n\n  function Body() {\n    this.bodyUsed = false;\n\n    this._initBody = function(body) {\n      this._bodyInit = body;\n      if (!body) {\n        this._bodyText = '';\n      } else if (typeof body === 'string') {\n        this._bodyText = body;\n      } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\n        this._bodyBlob = body;\n      } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\n        this._bodyFormData = body;\n      } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n        this._bodyText = body.toString();\n      } else if (support.arrayBuffer && support.blob && isDataView(body)) {\n        this._bodyArrayBuffer = bufferClone(body.buffer);\n        // IE 10-11 can't handle a DataView body.\n        this._bodyInit = new Blob([this._bodyArrayBuffer]);\n      } else if (support.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(body) || isArrayBufferView(body))) {\n        this._bodyArrayBuffer = bufferClone(body);\n      } else {\n        throw new Error('unsupported BodyInit type')\n      }\n\n      if (!this.headers.get('content-type')) {\n        if (typeof body === 'string') {\n          this.headers.set('content-type', 'text/plain;charset=UTF-8');\n        } else if (this._bodyBlob && this._bodyBlob.type) {\n          this.headers.set('content-type', this._bodyBlob.type);\n        } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n          this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8');\n        }\n      }\n    };\n\n    if (support.blob) {\n      this.blob = function() {\n        var rejected = consumed(this);\n        if (rejected) {\n          return rejected\n        }\n\n        if (this._bodyBlob) {\n          return Promise.resolve(this._bodyBlob)\n        } else if (this._bodyArrayBuffer) {\n          return Promise.resolve(new Blob([this._bodyArrayBuffer]))\n        } else if (this._bodyFormData) {\n          throw new Error('could not read FormData body as blob')\n        } else {\n          return Promise.resolve(new Blob([this._bodyText]))\n        }\n      };\n\n      this.arrayBuffer = function() {\n        if (this._bodyArrayBuffer) {\n          return consumed(this) || Promise.resolve(this._bodyArrayBuffer)\n        } else {\n          return this.blob().then(readBlobAsArrayBuffer)\n        }\n      };\n    }\n\n    this.text = function() {\n      var rejected = consumed(this);\n      if (rejected) {\n        return rejected\n      }\n\n      if (this._bodyBlob) {\n        return readBlobAsText(this._bodyBlob)\n      } else if (this._bodyArrayBuffer) {\n        return Promise.resolve(readArrayBufferAsText(this._bodyArrayBuffer))\n      } else if (this._bodyFormData) {\n        throw new Error('could not read FormData body as text')\n      } else {\n        return Promise.resolve(this._bodyText)\n      }\n    };\n\n    if (support.formData) {\n      this.formData = function() {\n        return this.text().then(decode)\n      };\n    }\n\n    this.json = function() {\n      return this.text().then(JSON.parse)\n    };\n\n    return this\n  }\n\n  // HTTP methods whose capitalization should be normalized\n  var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT'];\n\n  function normalizeMethod(method) {\n    var upcased = method.toUpperCase();\n    return (methods.indexOf(upcased) > -1) ? upcased : method\n  }\n\n  function Request(input, options) {\n    options = options || {};\n    var body = options.body;\n\n    if (input instanceof Request) {\n      if (input.bodyUsed) {\n        throw new TypeError('Already read')\n      }\n      this.url = input.url;\n      this.credentials = input.credentials;\n      if (!options.headers) {\n        this.headers = new Headers(input.headers);\n      }\n      this.method = input.method;\n      this.mode = input.mode;\n      if (!body && input._bodyInit != null) {\n        body = input._bodyInit;\n        input.bodyUsed = true;\n      }\n    } else {\n      this.url = String(input);\n    }\n\n    this.credentials = options.credentials || this.credentials || 'omit';\n    if (options.headers || !this.headers) {\n      this.headers = new Headers(options.headers);\n    }\n    this.method = normalizeMethod(options.method || this.method || 'GET');\n    this.mode = options.mode || this.mode || null;\n    this.referrer = null;\n\n    if ((this.method === 'GET' || this.method === 'HEAD') && body) {\n      throw new TypeError('Body not allowed for GET or HEAD requests')\n    }\n    this._initBody(body);\n  }\n\n  Request.prototype.clone = function() {\n    return new Request(this, { body: this._bodyInit })\n  };\n\n  function decode(body) {\n    var form = new FormData();\n    body.trim().split('&').forEach(function(bytes) {\n      if (bytes) {\n        var split = bytes.split('=');\n        var name = split.shift().replace(/\\+/g, ' ');\n        var value = split.join('=').replace(/\\+/g, ' ');\n        form.append(decodeURIComponent(name), decodeURIComponent(value));\n      }\n    });\n    return form\n  }\n\n  function parseHeaders(rawHeaders) {\n    var headers = new Headers();\n    rawHeaders.split(/\\r?\\n/).forEach(function(line) {\n      var parts = line.split(':');\n      var key = parts.shift().trim();\n      if (key) {\n        var value = parts.join(':').trim();\n        headers.append(key, value);\n      }\n    });\n    return headers\n  }\n\n  Body.call(Request.prototype);\n\n  function Response(bodyInit, options) {\n    if (!options) {\n      options = {};\n    }\n\n    this.type = 'default';\n    this.status = 'status' in options ? options.status : 200;\n    this.ok = this.status >= 200 && this.status < 300;\n    this.statusText = 'statusText' in options ? options.statusText : 'OK';\n    this.headers = new Headers(options.headers);\n    this.url = options.url || '';\n    this._initBody(bodyInit);\n  }\n\n  Body.call(Response.prototype);\n\n  Response.prototype.clone = function() {\n    return new Response(this._bodyInit, {\n      status: this.status,\n      statusText: this.statusText,\n      headers: new Headers(this.headers),\n      url: this.url\n    })\n  };\n\n  Response.error = function() {\n    var response = new Response(null, {status: 0, statusText: ''});\n    response.type = 'error';\n    return response\n  };\n\n  var redirectStatuses = [301, 302, 303, 307, 308];\n\n  Response.redirect = function(url, status) {\n    if (redirectStatuses.indexOf(status) === -1) {\n      throw new RangeError('Invalid status code')\n    }\n\n    return new Response(null, {status: status, headers: {location: url}})\n  };\n\n  self.Headers = Headers;\n  self.Request = Request;\n  self.Response = Response;\n\n  self.fetch = function(input, init) {\n    return new Promise(function(resolve, reject) {\n      var request = new Request(input, init);\n      var xhr = new XMLHttpRequest();\n\n      xhr.onload = function() {\n        var options = {\n          status: xhr.status,\n          statusText: xhr.statusText,\n          headers: parseHeaders(xhr.getAllResponseHeaders() || '')\n        };\n        options.url = 'responseURL' in xhr ? xhr.responseURL : options.headers.get('X-Request-URL');\n        var body = 'response' in xhr ? xhr.response : xhr.responseText;\n        resolve(new Response(body, options));\n      };\n\n      xhr.onerror = function() {\n        reject(new TypeError('Network request failed'));\n      };\n\n      xhr.ontimeout = function() {\n        reject(new TypeError('Network request failed'));\n      };\n\n      xhr.open(request.method, request.url, true);\n\n      if (request.credentials === 'include') {\n        xhr.withCredentials = true;\n      }\n\n      if ('responseType' in xhr && support.blob) {\n        xhr.responseType = 'blob';\n      }\n\n      request.headers.forEach(function(value, name) {\n        xhr.setRequestHeader(name, value);\n      });\n\n      xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit);\n    })\n  };\n  self.fetch.polyfill = true;\n})(typeof self !== 'undefined' ? self : this);\n","\"use strict\";\nvar __assign = (this && this.__assign) || Object.assign || function(t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n        s = arguments[i];\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n            t[p] = s[p];\n    }\n    return t;\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [0, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\n            t[p[i]] = s[p[i]];\n    return t;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar types_1 = require(\"./types\");\nvar types_2 = require(\"./types\");\nexports.ClientError = types_2.ClientError;\nrequire(\"cross-fetch/polyfill\");\nvar GraphQLClient = /** @class */ (function () {\n    function GraphQLClient(url, options) {\n        this.url = url;\n        this.options = options || {};\n    }\n    GraphQLClient.prototype.rawRequest = function (query, variables) {\n        return __awaiter(this, void 0, void 0, function () {\n            var _a, headers, others, body, response, result, errorResult;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        _a = this.options, headers = _a.headers, others = __rest(_a, [\"headers\"]);\n                        body = JSON.stringify({\n                            query: query,\n                            variables: variables ? variables : undefined,\n                        });\n                        return [4 /*yield*/, fetch(this.url, __assign({ method: 'POST', headers: Object.assign({ 'Content-Type': 'application/json' }, headers), body: body }, others))];\n                    case 1:\n                        response = _b.sent();\n                        return [4 /*yield*/, getResult(response)];\n                    case 2:\n                        result = _b.sent();\n                        if (response.ok && !result.errors && result.data) {\n                            return [2 /*return*/, result];\n                        }\n                        else {\n                            errorResult = typeof result === 'string' ? { error: result } : result;\n                            throw new types_1.ClientError(__assign({}, errorResult, { status: response.status }), { query: query, variables: variables });\n                        }\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    GraphQLClient.prototype.request = function (query, variables) {\n        return __awaiter(this, void 0, void 0, function () {\n            var _a, headers, others, body, response, result, errorResult;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        _a = this.options, headers = _a.headers, others = __rest(_a, [\"headers\"]);\n                        body = JSON.stringify({\n                            query: query,\n                            variables: variables ? variables : undefined,\n                        });\n                        return [4 /*yield*/, fetch(this.url, __assign({ method: 'POST', headers: Object.assign({ 'Content-Type': 'application/json' }, headers), body: body }, others))];\n                    case 1:\n                        response = _b.sent();\n                        return [4 /*yield*/, getResult(response)];\n                    case 2:\n                        result = _b.sent();\n                        if (response.ok && !result.errors && result.data) {\n                            return [2 /*return*/, result.data];\n                        }\n                        else {\n                            errorResult = typeof result === 'string' ? { error: result } : result;\n                            throw new types_1.ClientError(__assign({}, errorResult, { status: response.status }), { query: query, variables: variables });\n                        }\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    GraphQLClient.prototype.setHeaders = function (headers) {\n        this.options.headers = headers;\n        return this;\n    };\n    GraphQLClient.prototype.setHeader = function (key, value) {\n        var headers = this.options.headers;\n        if (headers) {\n            headers[key] = value;\n        }\n        else {\n            this.options.headers = (_a = {}, _a[key] = value, _a);\n        }\n        return this;\n        var _a;\n    };\n    return GraphQLClient;\n}());\nexports.GraphQLClient = GraphQLClient;\nfunction rawRequest(url, query, variables) {\n    return __awaiter(this, void 0, void 0, function () {\n        var client;\n        return __generator(this, function (_a) {\n            client = new GraphQLClient(url);\n            return [2 /*return*/, client.rawRequest(query, variables)];\n        });\n    });\n}\nexports.rawRequest = rawRequest;\nfunction request(url, query, variables) {\n    return __awaiter(this, void 0, void 0, function () {\n        var client;\n        return __generator(this, function (_a) {\n            client = new GraphQLClient(url);\n            return [2 /*return*/, client.request(query, variables)];\n        });\n    });\n}\nexports.request = request;\nexports.default = request;\nfunction getResult(response) {\n    return __awaiter(this, void 0, void 0, function () {\n        var contentType;\n        return __generator(this, function (_a) {\n            contentType = response.headers.get('Content-Type');\n            if (contentType && contentType.startsWith('application/json')) {\n                return [2 /*return*/, response.json()];\n            }\n            else {\n                return [2 /*return*/, response.text()];\n            }\n            return [2 /*return*/];\n        });\n    });\n}\n//# sourceMappingURL=index.js.map","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.visit = visit;\nexports.visitInParallel = visitInParallel;\nexports.visitWithTypeInfo = visitWithTypeInfo;\nexports.getVisitFn = getVisitFn;\n\n\n/**\n * A visitor is comprised of visit functions, which are called on each node\n * during the visitor's traversal.\n */\n\n\n/**\n * A visitor is provided to visit, it contains the collection of\n * relevant functions to be called during the visitor's traversal.\n */\n/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *  strict\n */\n\nvar QueryDocumentKeys = exports.QueryDocumentKeys = {\n  Name: [],\n\n  Document: ['definitions'],\n  OperationDefinition: ['name', 'variableDefinitions', 'directives', 'selectionSet'],\n  VariableDefinition: ['variable', 'type', 'defaultValue'],\n  Variable: ['name'],\n  SelectionSet: ['selections'],\n  Field: ['alias', 'name', 'arguments', 'directives', 'selectionSet'],\n  Argument: ['name', 'value'],\n\n  FragmentSpread: ['name', 'directives'],\n  InlineFragment: ['typeCondition', 'directives', 'selectionSet'],\n  FragmentDefinition: ['name',\n  // Note: fragment variable definitions are experimental and may be changed\n  // or removed in the future.\n  'variableDefinitions', 'typeCondition', 'directives', 'selectionSet'],\n\n  IntValue: [],\n  FloatValue: [],\n  StringValue: [],\n  BooleanValue: [],\n  NullValue: [],\n  EnumValue: [],\n  ListValue: ['values'],\n  ObjectValue: ['fields'],\n  ObjectField: ['name', 'value'],\n\n  Directive: ['name', 'arguments'],\n\n  NamedType: ['name'],\n  ListType: ['type'],\n  NonNullType: ['type'],\n\n  SchemaDefinition: ['directives', 'operationTypes'],\n  OperationTypeDefinition: ['type'],\n\n  ScalarTypeDefinition: ['description', 'name', 'directives'],\n  ObjectTypeDefinition: ['description', 'name', 'interfaces', 'directives', 'fields'],\n  FieldDefinition: ['description', 'name', 'arguments', 'type', 'directives'],\n  InputValueDefinition: ['description', 'name', 'type', 'defaultValue', 'directives'],\n  InterfaceTypeDefinition: ['description', 'name', 'directives', 'fields'],\n  UnionTypeDefinition: ['description', 'name', 'directives', 'types'],\n  EnumTypeDefinition: ['description', 'name', 'directives', 'values'],\n  EnumValueDefinition: ['description', 'name', 'directives'],\n  InputObjectTypeDefinition: ['description', 'name', 'directives', 'fields'],\n\n  ScalarTypeExtension: ['name', 'directives'],\n  ObjectTypeExtension: ['name', 'interfaces', 'directives', 'fields'],\n  InterfaceTypeExtension: ['name', 'directives', 'fields'],\n  UnionTypeExtension: ['name', 'directives', 'types'],\n  EnumTypeExtension: ['name', 'directives', 'values'],\n  InputObjectTypeExtension: ['name', 'directives', 'fields'],\n\n  DirectiveDefinition: ['description', 'name', 'arguments', 'locations']\n};\n\n/**\n * A KeyMap describes each the traversable properties of each kind of node.\n */\nvar BREAK = exports.BREAK = {};\n\n/**\n * visit() will walk through an AST using a depth first traversal, calling\n * the visitor's enter function at each node in the traversal, and calling the\n * leave function after visiting that node and all of its child nodes.\n *\n * By returning different values from the enter and leave functions, the\n * behavior of the visitor can be altered, including skipping over a sub-tree of\n * the AST (by returning false), editing the AST by returning a value or null\n * to remove the value, or to stop the whole traversal by returning BREAK.\n *\n * When using visit() to edit an AST, the original AST will not be modified, and\n * a new version of the AST with the changes applied will be returned from the\n * visit function.\n *\n *     const editedAST = visit(ast, {\n *       enter(node, key, parent, path, ancestors) {\n *         // @return\n *         //   undefined: no action\n *         //   false: skip visiting this node\n *         //   visitor.BREAK: stop visiting altogether\n *         //   null: delete this node\n *         //   any value: replace this node with the returned value\n *       },\n *       leave(node, key, parent, path, ancestors) {\n *         // @return\n *         //   undefined: no action\n *         //   false: no action\n *         //   visitor.BREAK: stop visiting altogether\n *         //   null: delete this node\n *         //   any value: replace this node with the returned value\n *       }\n *     });\n *\n * Alternatively to providing enter() and leave() functions, a visitor can\n * instead provide functions named the same as the kinds of AST nodes, or\n * enter/leave visitors at a named key, leading to four permutations of\n * visitor API:\n *\n * 1) Named visitors triggered when entering a node a specific kind.\n *\n *     visit(ast, {\n *       Kind(node) {\n *         // enter the \"Kind\" node\n *       }\n *     })\n *\n * 2) Named visitors that trigger upon entering and leaving a node of\n *    a specific kind.\n *\n *     visit(ast, {\n *       Kind: {\n *         enter(node) {\n *           // enter the \"Kind\" node\n *         }\n *         leave(node) {\n *           // leave the \"Kind\" node\n *         }\n *       }\n *     })\n *\n * 3) Generic visitors that trigger upon entering and leaving any node.\n *\n *     visit(ast, {\n *       enter(node) {\n *         // enter any node\n *       },\n *       leave(node) {\n *         // leave any node\n *       }\n *     })\n *\n * 4) Parallel visitors for entering and leaving nodes of a specific kind.\n *\n *     visit(ast, {\n *       enter: {\n *         Kind(node) {\n *           // enter the \"Kind\" node\n *         }\n *       },\n *       leave: {\n *         Kind(node) {\n *           // leave the \"Kind\" node\n *         }\n *       }\n *     })\n */\nfunction visit(root, visitor) {\n  var visitorKeys = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : QueryDocumentKeys;\n\n  /* eslint-disable no-undef-init */\n  var stack = undefined;\n  var inArray = Array.isArray(root);\n  var keys = [root];\n  var index = -1;\n  var edits = [];\n  var node = undefined;\n  var key = undefined;\n  var parent = undefined;\n  var path = [];\n  var ancestors = [];\n  var newRoot = root;\n  /* eslint-enable no-undef-init */\n\n  do {\n    index++;\n    var isLeaving = index === keys.length;\n    var isEdited = isLeaving && edits.length !== 0;\n    if (isLeaving) {\n      key = ancestors.length === 0 ? undefined : path[path.length - 1];\n      node = parent;\n      parent = ancestors.pop();\n      if (isEdited) {\n        if (inArray) {\n          node = node.slice();\n        } else {\n          var clone = {};\n          for (var k in node) {\n            if (node.hasOwnProperty(k)) {\n              clone[k] = node[k];\n            }\n          }\n          node = clone;\n        }\n        var editOffset = 0;\n        for (var ii = 0; ii < edits.length; ii++) {\n          var editKey = edits[ii][0];\n          var editValue = edits[ii][1];\n          if (inArray) {\n            editKey -= editOffset;\n          }\n          if (inArray && editValue === null) {\n            node.splice(editKey, 1);\n            editOffset++;\n          } else {\n            node[editKey] = editValue;\n          }\n        }\n      }\n      index = stack.index;\n      keys = stack.keys;\n      edits = stack.edits;\n      inArray = stack.inArray;\n      stack = stack.prev;\n    } else {\n      key = parent ? inArray ? index : keys[index] : undefined;\n      node = parent ? parent[key] : newRoot;\n      if (node === null || node === undefined) {\n        continue;\n      }\n      if (parent) {\n        path.push(key);\n      }\n    }\n\n    var result = void 0;\n    if (!Array.isArray(node)) {\n      if (!isNode(node)) {\n        throw new Error('Invalid AST Node: ' + JSON.stringify(node));\n      }\n      var visitFn = getVisitFn(visitor, node.kind, isLeaving);\n      if (visitFn) {\n        result = visitFn.call(visitor, node, key, parent, path, ancestors);\n\n        if (result === BREAK) {\n          break;\n        }\n\n        if (result === false) {\n          if (!isLeaving) {\n            path.pop();\n            continue;\n          }\n        } else if (result !== undefined) {\n          edits.push([key, result]);\n          if (!isLeaving) {\n            if (isNode(result)) {\n              node = result;\n            } else {\n              path.pop();\n              continue;\n            }\n          }\n        }\n      }\n    }\n\n    if (result === undefined && isEdited) {\n      edits.push([key, node]);\n    }\n\n    if (isLeaving) {\n      path.pop();\n    } else {\n      stack = { inArray: inArray, index: index, keys: keys, edits: edits, prev: stack };\n      inArray = Array.isArray(node);\n      keys = inArray ? node : visitorKeys[node.kind] || [];\n      index = -1;\n      edits = [];\n      if (parent) {\n        ancestors.push(parent);\n      }\n      parent = node;\n    }\n  } while (stack !== undefined);\n\n  if (edits.length !== 0) {\n    newRoot = edits[edits.length - 1][1];\n  }\n\n  return newRoot;\n}\n\nfunction isNode(maybeNode) {\n  return Boolean(maybeNode && typeof maybeNode.kind === 'string');\n}\n\n/**\n * Creates a new visitor instance which delegates to many visitors to run in\n * parallel. Each visitor will be visited for each node before moving on.\n *\n * If a prior visitor edits a node, no following visitors will see that node.\n */\nfunction visitInParallel(visitors) {\n  var skipping = new Array(visitors.length);\n\n  return {\n    enter: function enter(node) {\n      for (var i = 0; i < visitors.length; i++) {\n        if (!skipping[i]) {\n          var fn = getVisitFn(visitors[i], node.kind, /* isLeaving */false);\n          if (fn) {\n            var result = fn.apply(visitors[i], arguments);\n            if (result === false) {\n              skipping[i] = node;\n            } else if (result === BREAK) {\n              skipping[i] = BREAK;\n            } else if (result !== undefined) {\n              return result;\n            }\n          }\n        }\n      }\n    },\n    leave: function leave(node) {\n      for (var i = 0; i < visitors.length; i++) {\n        if (!skipping[i]) {\n          var fn = getVisitFn(visitors[i], node.kind, /* isLeaving */true);\n          if (fn) {\n            var result = fn.apply(visitors[i], arguments);\n            if (result === BREAK) {\n              skipping[i] = BREAK;\n            } else if (result !== undefined && result !== false) {\n              return result;\n            }\n          }\n        } else if (skipping[i] === node) {\n          skipping[i] = null;\n        }\n      }\n    }\n  };\n}\n\n/**\n * Creates a new visitor instance which maintains a provided TypeInfo instance\n * along with visiting visitor.\n */\nfunction visitWithTypeInfo(typeInfo, visitor) {\n  return {\n    enter: function enter(node) {\n      typeInfo.enter(node);\n      var fn = getVisitFn(visitor, node.kind, /* isLeaving */false);\n      if (fn) {\n        var result = fn.apply(visitor, arguments);\n        if (result !== undefined) {\n          typeInfo.leave(node);\n          if (isNode(result)) {\n            typeInfo.enter(result);\n          }\n        }\n        return result;\n      }\n    },\n    leave: function leave(node) {\n      var fn = getVisitFn(visitor, node.kind, /* isLeaving */true);\n      var result = void 0;\n      if (fn) {\n        result = fn.apply(visitor, arguments);\n      }\n      typeInfo.leave(node);\n      return result;\n    }\n  };\n}\n\n/**\n * Given a visitor instance, if it is leaving or not, and a node kind, return\n * the function the visitor runtime should call.\n */\nfunction getVisitFn(visitor, kind, isLeaving) {\n  var kindVisitor = visitor[kind];\n  if (kindVisitor) {\n    if (!isLeaving && typeof kindVisitor === 'function') {\n      // { Kind() {} }\n      return kindVisitor;\n    }\n    var kindSpecificVisitor = isLeaving ? kindVisitor.leave : kindVisitor.enter;\n    if (typeof kindSpecificVisitor === 'function') {\n      // { Kind: { enter() {}, leave() {} } }\n      return kindSpecificVisitor;\n    }\n  } else {\n    var specificVisitor = isLeaving ? visitor.leave : visitor.enter;\n    if (specificVisitor) {\n      if (typeof specificVisitor === 'function') {\n        // { enter() {}, leave() {} }\n        return specificVisitor;\n      }\n      var specificKindVisitor = specificVisitor[kind];\n      if (typeof specificKindVisitor === 'function') {\n        // { enter: { Kind() {} }, leave: { Kind() {} } }\n        return specificKindVisitor;\n      }\n    }\n  }\n}","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.print = print;\n\nvar _visitor = require('./visitor');\n\n/**\n * Converts an AST into a string, using one set of reasonable\n * formatting rules.\n */\nfunction print(ast) {\n  return (0, _visitor.visit)(ast, { leave: printDocASTReducer });\n} /**\n   * Copyright (c) 2015-present, Facebook, Inc.\n   *\n   * This source code is licensed under the MIT license found in the\n   * LICENSE file in the root directory of this source tree.\n   */\n\nvar printDocASTReducer = {\n  Name: function Name(node) {\n    return node.value;\n  },\n  Variable: function Variable(node) {\n    return '$' + node.name;\n  },\n\n  // Document\n\n  Document: function Document(node) {\n    return join(node.definitions, '\\n\\n') + '\\n';\n  },\n\n  OperationDefinition: function OperationDefinition(node) {\n    var op = node.operation;\n    var name = node.name;\n    var varDefs = wrap('(', join(node.variableDefinitions, ', '), ')');\n    var directives = join(node.directives, ' ');\n    var selectionSet = node.selectionSet;\n    // Anonymous queries with no directives or variable definitions can use\n    // the query short form.\n    return !name && !directives && !varDefs && op === 'query' ? selectionSet : join([op, join([name, varDefs]), directives, selectionSet], ' ');\n  },\n\n\n  VariableDefinition: function VariableDefinition(_ref) {\n    var variable = _ref.variable,\n        type = _ref.type,\n        defaultValue = _ref.defaultValue;\n    return variable + ': ' + type + wrap(' = ', defaultValue);\n  },\n\n  SelectionSet: function SelectionSet(_ref2) {\n    var selections = _ref2.selections;\n    return block(selections);\n  },\n\n  Field: function Field(_ref3) {\n    var alias = _ref3.alias,\n        name = _ref3.name,\n        args = _ref3.arguments,\n        directives = _ref3.directives,\n        selectionSet = _ref3.selectionSet;\n    return join([wrap('', alias, ': ') + name + wrap('(', join(args, ', '), ')'), join(directives, ' '), selectionSet], ' ');\n  },\n\n  Argument: function Argument(_ref4) {\n    var name = _ref4.name,\n        value = _ref4.value;\n    return name + ': ' + value;\n  },\n\n  // Fragments\n\n  FragmentSpread: function FragmentSpread(_ref5) {\n    var name = _ref5.name,\n        directives = _ref5.directives;\n    return '...' + name + wrap(' ', join(directives, ' '));\n  },\n\n  InlineFragment: function InlineFragment(_ref6) {\n    var typeCondition = _ref6.typeCondition,\n        directives = _ref6.directives,\n        selectionSet = _ref6.selectionSet;\n    return join(['...', wrap('on ', typeCondition), join(directives, ' '), selectionSet], ' ');\n  },\n\n  FragmentDefinition: function FragmentDefinition(_ref7) {\n    var name = _ref7.name,\n        typeCondition = _ref7.typeCondition,\n        variableDefinitions = _ref7.variableDefinitions,\n        directives = _ref7.directives,\n        selectionSet = _ref7.selectionSet;\n    return (\n      // Note: fragment variable definitions are experimental and may be changed\n      // or removed in the future.\n      'fragment ' + name + wrap('(', join(variableDefinitions, ', '), ')') + ' ' + ('on ' + typeCondition + ' ' + wrap('', join(directives, ' '), ' ')) + selectionSet\n    );\n  },\n\n  // Value\n\n  IntValue: function IntValue(_ref8) {\n    var value = _ref8.value;\n    return value;\n  },\n  FloatValue: function FloatValue(_ref9) {\n    var value = _ref9.value;\n    return value;\n  },\n  StringValue: function StringValue(_ref10, key) {\n    var value = _ref10.value,\n        isBlockString = _ref10.block;\n    return isBlockString ? printBlockString(value, key === 'description') : JSON.stringify(value);\n  },\n  BooleanValue: function BooleanValue(_ref11) {\n    var value = _ref11.value;\n    return value ? 'true' : 'false';\n  },\n  NullValue: function NullValue() {\n    return 'null';\n  },\n  EnumValue: function EnumValue(_ref12) {\n    var value = _ref12.value;\n    return value;\n  },\n  ListValue: function ListValue(_ref13) {\n    var values = _ref13.values;\n    return '[' + join(values, ', ') + ']';\n  },\n  ObjectValue: function ObjectValue(_ref14) {\n    var fields = _ref14.fields;\n    return '{' + join(fields, ', ') + '}';\n  },\n  ObjectField: function ObjectField(_ref15) {\n    var name = _ref15.name,\n        value = _ref15.value;\n    return name + ': ' + value;\n  },\n\n  // Directive\n\n  Directive: function Directive(_ref16) {\n    var name = _ref16.name,\n        args = _ref16.arguments;\n    return '@' + name + wrap('(', join(args, ', '), ')');\n  },\n\n  // Type\n\n  NamedType: function NamedType(_ref17) {\n    var name = _ref17.name;\n    return name;\n  },\n  ListType: function ListType(_ref18) {\n    var type = _ref18.type;\n    return '[' + type + ']';\n  },\n  NonNullType: function NonNullType(_ref19) {\n    var type = _ref19.type;\n    return type + '!';\n  },\n\n  // Type System Definitions\n\n  SchemaDefinition: function SchemaDefinition(_ref20) {\n    var directives = _ref20.directives,\n        operationTypes = _ref20.operationTypes;\n    return join(['schema', join(directives, ' '), block(operationTypes)], ' ');\n  },\n\n  OperationTypeDefinition: function OperationTypeDefinition(_ref21) {\n    var operation = _ref21.operation,\n        type = _ref21.type;\n    return operation + ': ' + type;\n  },\n\n  ScalarTypeDefinition: addDescription(function (_ref22) {\n    var name = _ref22.name,\n        directives = _ref22.directives;\n    return join(['scalar', name, join(directives, ' ')], ' ');\n  }),\n\n  ObjectTypeDefinition: addDescription(function (_ref23) {\n    var name = _ref23.name,\n        interfaces = _ref23.interfaces,\n        directives = _ref23.directives,\n        fields = _ref23.fields;\n    return join(['type', name, wrap('implements ', join(interfaces, ' & ')), join(directives, ' '), block(fields)], ' ');\n  }),\n\n  FieldDefinition: addDescription(function (_ref24) {\n    var name = _ref24.name,\n        args = _ref24.arguments,\n        type = _ref24.type,\n        directives = _ref24.directives;\n    return name + wrap('(', join(args, ', '), ')') + ': ' + type + wrap(' ', join(directives, ' '));\n  }),\n\n  InputValueDefinition: addDescription(function (_ref25) {\n    var name = _ref25.name,\n        type = _ref25.type,\n        defaultValue = _ref25.defaultValue,\n        directives = _ref25.directives;\n    return join([name + ': ' + type, wrap('= ', defaultValue), join(directives, ' ')], ' ');\n  }),\n\n  InterfaceTypeDefinition: addDescription(function (_ref26) {\n    var name = _ref26.name,\n        directives = _ref26.directives,\n        fields = _ref26.fields;\n    return join(['interface', name, join(directives, ' '), block(fields)], ' ');\n  }),\n\n  UnionTypeDefinition: addDescription(function (_ref27) {\n    var name = _ref27.name,\n        directives = _ref27.directives,\n        types = _ref27.types;\n    return join(['union', name, join(directives, ' '), types && types.length !== 0 ? '= ' + join(types, ' | ') : ''], ' ');\n  }),\n\n  EnumTypeDefinition: addDescription(function (_ref28) {\n    var name = _ref28.name,\n        directives = _ref28.directives,\n        values = _ref28.values;\n    return join(['enum', name, join(directives, ' '), block(values)], ' ');\n  }),\n\n  EnumValueDefinition: addDescription(function (_ref29) {\n    var name = _ref29.name,\n        directives = _ref29.directives;\n    return join([name, join(directives, ' ')], ' ');\n  }),\n\n  InputObjectTypeDefinition: addDescription(function (_ref30) {\n    var name = _ref30.name,\n        directives = _ref30.directives,\n        fields = _ref30.fields;\n    return join(['input', name, join(directives, ' '), block(fields)], ' ');\n  }),\n\n  ScalarTypeExtension: function ScalarTypeExtension(_ref31) {\n    var name = _ref31.name,\n        directives = _ref31.directives;\n    return join(['extend scalar', name, join(directives, ' ')], ' ');\n  },\n\n  ObjectTypeExtension: function ObjectTypeExtension(_ref32) {\n    var name = _ref32.name,\n        interfaces = _ref32.interfaces,\n        directives = _ref32.directives,\n        fields = _ref32.fields;\n    return join(['extend type', name, wrap('implements ', join(interfaces, ' & ')), join(directives, ' '), block(fields)], ' ');\n  },\n\n  InterfaceTypeExtension: function InterfaceTypeExtension(_ref33) {\n    var name = _ref33.name,\n        directives = _ref33.directives,\n        fields = _ref33.fields;\n    return join(['extend interface', name, join(directives, ' '), block(fields)], ' ');\n  },\n\n  UnionTypeExtension: function UnionTypeExtension(_ref34) {\n    var name = _ref34.name,\n        directives = _ref34.directives,\n        types = _ref34.types;\n    return join(['extend union', name, join(directives, ' '), types && types.length !== 0 ? '= ' + join(types, ' | ') : ''], ' ');\n  },\n\n  EnumTypeExtension: function EnumTypeExtension(_ref35) {\n    var name = _ref35.name,\n        directives = _ref35.directives,\n        values = _ref35.values;\n    return join(['extend enum', name, join(directives, ' '), block(values)], ' ');\n  },\n\n  InputObjectTypeExtension: function InputObjectTypeExtension(_ref36) {\n    var name = _ref36.name,\n        directives = _ref36.directives,\n        fields = _ref36.fields;\n    return join(['extend input', name, join(directives, ' '), block(fields)], ' ');\n  },\n\n  DirectiveDefinition: addDescription(function (_ref37) {\n    var name = _ref37.name,\n        args = _ref37.arguments,\n        locations = _ref37.locations;\n    return 'directive @' + name + wrap('(', join(args, ', '), ')') + ' on ' + join(locations, ' | ');\n  })\n};\n\nfunction addDescription(cb) {\n  return function (node) {\n    return join([node.description, cb(node)], '\\n');\n  };\n}\n\n/**\n * Given maybeArray, print an empty string if it is null or empty, otherwise\n * print all items together separated by separator if provided\n */\nfunction join(maybeArray, separator) {\n  return maybeArray ? maybeArray.filter(function (x) {\n    return x;\n  }).join(separator || '') : '';\n}\n\n/**\n * Given array, print each item on its own line, wrapped in an\n * indented \"{ }\" block.\n */\nfunction block(array) {\n  return array && array.length !== 0 ? '{\\n' + indent(join(array, '\\n')) + '\\n}' : '';\n}\n\n/**\n * If maybeString is not null or empty, then wrap with start and end, otherwise\n * print an empty string.\n */\nfunction wrap(start, maybeString, end) {\n  return maybeString ? start + maybeString + (end || '') : '';\n}\n\nfunction indent(maybeString) {\n  return maybeString && '  ' + maybeString.replace(/\\n/g, '\\n  ');\n}\n\n/**\n * Print a block string in the indented block form by adding a leading and\n * trailing blank line. However, if a block string starts with whitespace and is\n * a single-line, adding a leading blank line would strip that whitespace.\n */\nfunction printBlockString(value, isDescription) {\n  var escaped = value.replace(/\"\"\"/g, '\\\\\"\"\"');\n  return (value[0] === ' ' || value[0] === '\\t') && value.indexOf('\\n') === -1 ? '\"\"\"' + escaped.replace(/\"$/, '\"\\n') + '\"\"\"' : '\"\"\"\\n' + (isDescription ? escaped : indent(escaped)) + '\\n\"\"\"';\n}","import { request } from 'graphql-request'\nimport { print } from 'graphql/language/printer'\n\nexport const query = (file, after) => {\n  return new Promise((resolve, reject) => {\n    request('https://www.graphqlhub.com/graphql', print(file), {\n      after: after && after.fullnameId\n    }).then(res => {\n      resolve(res)\n    }).catch(error => {\n      reject(error)\n    })\n  })\n}\n","import { bind, wire } from 'hyperhtml'\nimport { query } from './request'\nimport index from './index.gql'\n\nlet list = []\nlet loading = false\n\nfunction timeFormatter(string) {\n  let date = new Date(string)\n  return date.toLocaleDateString() + ' ' + date.toLocaleTimeString()\n}\n\nfunction getList() {\n  loading = true\n  render()\n  query(index, list[list.length - 1]).then(data => {\n    const newList = data.reddit && data.reddit.subreddit && data.reddit.subreddit.newListings || []\n    list = [...list, ...newList]\n    loading = false\n    render()\n  })\n}\n\nfunction render() {\n  bind(document.body.querySelector('.yue')) `${\n    list.map(\n      li =>\n        wire() `<li>\n          <a href=\"${li.url}\">${li.title}</a>\n          <p><small><em>Score: ${li.score}</em> - ${li.author.username} - ${timeFormatter(li.author.createdISO)}</small></p>\n        </li>`\n    )}\n    ${loading ? 'Loading...' : wire() `<a href=\"javascript:;\" onclick=${getList}>Load More</a>`}\n  `\n}\n\ngetList()"]}